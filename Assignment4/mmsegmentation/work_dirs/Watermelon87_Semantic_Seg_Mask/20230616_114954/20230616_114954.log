2023/06/16 11:49:54 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 42
    GPU 0: NVIDIA GeForce GTX 1080 Ti
    CUDA_HOME: /usr/local/cuda-11.6
    NVCC: Cuda compilation tools, release 11.6, V11.6.124
    GCC: gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0
    PyTorch: 1.10.1+cu113
    PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

    TorchVision: 0.11.2+cu113
    OpenCV: 4.7.0
    MMEngine: 0.7.1

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 42
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/16 11:49:54 - mmengine - INFO - Config:
norm_cfg = dict(type='BN', requires_grad=True)
data_preprocessor = dict(
    type='SegDataPreProcessor',
    mean=[123.675, 116.28, 103.53],
    std=[58.395, 57.12, 57.375],
    bgr_to_rgb=True,
    pad_val=0,
    seg_pad_val=255,
    size=(64, 64))
model = dict(
    type='EncoderDecoder',
    data_preprocessor=dict(
        type='SegDataPreProcessor',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        bgr_to_rgb=True,
        pad_val=0,
        seg_pad_val=255,
        size=(128, 128)),
    pretrained='open-mmlab://resnet50_v1c',
    backbone=dict(
        type='ResNetV1c',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        dilations=(1, 1, 2, 4),
        strides=(1, 2, 1, 1),
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=False,
        style='pytorch',
        contract_dilation=True),
    decode_head=dict(
        type='PSPHead',
        in_channels=2048,
        in_index=3,
        channels=512,
        pool_scales=(1, 2, 3, 6),
        dropout_ratio=0.1,
        num_classes=6,
        norm_cfg=dict(type='BN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    auxiliary_head=dict(
        type='FCNHead',
        in_channels=1024,
        in_index=2,
        channels=256,
        num_convs=1,
        concat_input=False,
        dropout_ratio=0.1,
        num_classes=6,
        norm_cfg=dict(type='BN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
dataset_type = 'Watermelon87Dataset'
data_root = 'data/Watermelon87_Semantic_Seg_Mask'
crop_size = (128, 128)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(
        type='RandomResize',
        scale=(2048, 1024),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(128, 128), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', scale=(2048, 1024), keep_ratio=True),
    dict(type='LoadAnnotations'),
    dict(type='PackSegInputs')
]
img_ratios = [0.5, 0.75, 1.0, 1.25, 1.5, 1.75]
tta_pipeline = [
    dict(type='LoadImageFromFile', file_client_args=dict(backend='disk')),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale_factor': 0.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 0.75,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.0,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.25,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.75,
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 0.0,
                        'direction': 'horizontal'
                    }, {
                        'type': 'RandomFlip',
                        'prob': 1.0,
                        'direction': 'horizontal'
                    }], [{
                        'type': 'LoadAnnotations'
                    }], [{
                        'type': 'PackSegInputs'
                    }]])
]
train_dataloader = dict(
    batch_size=12,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(type='InfiniteSampler', shuffle=True),
    dataset=dict(
        type='Watermelon87Dataset',
        data_root='data/Watermelon87_Semantic_Seg_Mask',
        data_prefix=dict(
            img_path='img_dir/train', seg_map_path='ann_dir/train'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(
                type='RandomResize',
                scale=(2048, 1024),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(128, 128), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs')
        ]))
val_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='Watermelon87Dataset',
        data_root='data/Watermelon87_Semantic_Seg_Mask',
        data_prefix=dict(img_path='img_dir/val', seg_map_path='ann_dir/val'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(2048, 1024), keep_ratio=True),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs')
        ]))
test_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='Watermelon87Dataset',
        data_root='data/Watermelon87_Semantic_Seg_Mask',
        data_prefix=dict(img_path='img_dir/val', seg_map_path='ann_dir/val'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(2048, 1024), keep_ratio=True),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs')
        ]))
val_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
test_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='SegLocalVisualizer',
    vis_backends=[dict(type='LocalVisBackend')],
    name='visualizer')
log_processor = dict(by_epoch=False)
log_level = 'INFO'
load_from = None
resume = False
tta_model = dict(type='SegTTAModel')
optimizer = dict(type='SGD', lr=0.005, momentum=0.9, weight_decay=0.0005)
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='SGD', lr=0.005, momentum=0.9, weight_decay=0.0005),
    clip_grad=None)
param_scheduler = [
    dict(
        type='PolyLR',
        eta_min=0.0001,
        power=0.9,
        begin=0,
        end=40000,
        by_epoch=False)
]
train_cfg = dict(type='IterBasedTrainLoop', max_iters=8000, val_interval=400)
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=100, log_metric_by_epoch=False),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook',
        by_epoch=False,
        interval=1000,
        max_keep_ckpts=2,
        save_best=['mAcc', 'mIoU'],
        rule='greater'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='SegVisualizationHook'))
work_dir = './work_dirs/Watermelon87_Semantic_Seg_Mask'
randomness = dict(seed=42)

2023/06/16 11:49:58 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/16 11:49:58 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/16 11:50:04 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2023/06/16 11:50:04 - mmengine - INFO - load model from: open-mmlab://resnet50_v1c
2023/06/16 11:50:04 - mmengine - INFO - Loads checkpoint by openmmlab backend from path: open-mmlab://resnet50_v1c
2023/06/16 11:50:04 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

Name of parameter - Initialization information

backbone.stem.0.weight - torch.Size([32, 3, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.1.weight - torch.Size([32]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.1.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.3.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.4.weight - torch.Size([32]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.4.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.6.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.7.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.7.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

decode_head.conv_seg.weight - torch.Size([6, 512, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([6]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.psp_modules.0.1.conv.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.0.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.0.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.conv.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.conv.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.conv.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.bottleneck.conv.weight - torch.Size([512, 4096, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.bottleneck.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.bottleneck.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.conv_seg.weight - torch.Size([6, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

auxiliary_head.conv_seg.bias - torch.Size([6]): 
NormalInit: mean=0, std=0.01, bias=0 

auxiliary_head.convs.0.conv.weight - torch.Size([256, 1024, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2023/06/16 11:50:04 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/16 11:50:04 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/16 11:50:04 - mmengine - INFO - Checkpoints will be saved to /home/cine/Documents/GitHub/mmsegmentation/work_dirs/Watermelon87_Semantic_Seg_Mask.
2023/06/16 11:50:06 - mmengine - INFO - Exp name: pspnet-Watermelon87_Semantic_Seg_Mask_20230616_20230616_114954
2023/06/16 11:50:20 - mmengine - INFO - Iter(train) [ 100/8000]  lr: 4.9891e-03  eta: 0:20:33  time: 0.1391  data_time: 0.0063  memory: 5606  loss: 0.9351  decode.loss_ce: 0.6403  decode.acc_seg: 64.4068  aux.loss_ce: 0.2948  aux.acc_seg: 63.9048
2023/06/16 11:50:34 - mmengine - INFO - Iter(train) [ 200/8000]  lr: 4.9781e-03  eta: 0:19:35  time: 0.1451  data_time: 0.0118  memory: 1906  loss: 0.8062  decode.loss_ce: 0.5719  decode.acc_seg: 85.0306  aux.loss_ce: 0.2343  aux.acc_seg: 88.2451
2023/06/16 11:50:49 - mmengine - INFO - Iter(train) [ 300/8000]  lr: 4.9670e-03  eta: 0:18:56  time: 0.1451  data_time: 0.0109  memory: 1906  loss: 0.7541  decode.loss_ce: 0.5265  decode.acc_seg: 85.5286  aux.loss_ce: 0.2276  aux.acc_seg: 81.3278
2023/06/16 11:51:03 - mmengine - INFO - Iter(train) [ 400/8000]  lr: 4.9560e-03  eta: 0:18:31  time: 0.1507  data_time: 0.0153  memory: 1906  loss: 0.6104  decode.loss_ce: 0.4198  decode.acc_seg: 83.1146  aux.loss_ce: 0.1906  aux.acc_seg: 84.1400
2023/06/16 11:51:16 - mmengine - INFO - per class results:
2023/06/16 11:51:16 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     | 77.57 | 88.34 |
|   Green    | 73.58 | 80.42 |
|   White    | 34.27 | 56.61 |
| Seed-black | 61.08 |  78.1 |
| Seed-white | 35.37 | 39.17 |
| Unlabeled  |  0.0  |  0.0  |
+------------+-------+-------+
2023/06/16 11:51:16 - mmengine - INFO - Iter(val) [11/11]  aAcc: 82.9200  mIoU: 46.9800  mAcc: 57.1100  data_time: 0.0015  time: 1.1312
2023/06/16 11:51:17 - mmengine - INFO - The best checkpoint with 57.1100 mAcc at 400 iter is saved to best_mAcc_iter_400.pth.
2023/06/16 11:51:18 - mmengine - INFO - The best checkpoint with 46.9800 mIoU at 400 iter is saved to best_mIoU_iter_400.pth.
2023/06/16 11:51:32 - mmengine - INFO - Iter(train) [ 500/8000]  lr: 4.9449e-03  eta: 0:18:37  time: 0.1418  data_time: 0.0073  memory: 9087  loss: 0.5172  decode.loss_ce: 0.3563  decode.acc_seg: 89.7074  aux.loss_ce: 0.1609  aux.acc_seg: 89.9648
2023/06/16 11:51:47 - mmengine - INFO - Iter(train) [ 600/8000]  lr: 4.9339e-03  eta: 0:18:13  time: 0.1411  data_time: 0.0061  memory: 1906  loss: 0.6013  decode.loss_ce: 0.4204  decode.acc_seg: 86.4690  aux.loss_ce: 0.1809  aux.acc_seg: 85.0891
2023/06/16 11:52:01 - mmengine - INFO - Iter(train) [ 700/8000]  lr: 4.9229e-03  eta: 0:17:52  time: 0.1425  data_time: 0.0073  memory: 1906  loss: 0.6524  decode.loss_ce: 0.4586  decode.acc_seg: 92.3696  aux.loss_ce: 0.1938  aux.acc_seg: 91.0116
2023/06/16 11:52:15 - mmengine - INFO - Iter(train) [ 800/8000]  lr: 4.9118e-03  eta: 0:17:33  time: 0.1433  data_time: 0.0072  memory: 1906  loss: 0.5245  decode.loss_ce: 0.3682  decode.acc_seg: 85.6384  aux.loss_ce: 0.1563  aux.acc_seg: 84.0800
2023/06/16 11:52:18 - mmengine - INFO - per class results:
2023/06/16 11:52:18 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     | 79.85 | 94.72 |
|   Green    | 64.64 |  70.7 |
|   White    | 54.18 |  60.1 |
| Seed-black | 75.54 | 86.38 |
| Seed-white | 21.75 | 21.85 |
| Unlabeled  |  0.0  |  0.0  |
+------------+-------+-------+
2023/06/16 11:52:18 - mmengine - INFO - Iter(val) [11/11]  aAcc: 84.8000  mIoU: 49.3300  mAcc: 55.6300  data_time: 0.0018  time: 0.2541
2023/06/16 11:52:18 - mmengine - INFO - The previous best checkpoint /home/cine/Documents/GitHub/mmsegmentation/work_dirs/Watermelon87_Semantic_Seg_Mask/best_mIoU_iter_400.pth is removed
2023/06/16 11:52:19 - mmengine - INFO - The best checkpoint with 49.3300 mIoU at 800 iter is saved to best_mIoU_iter_800.pth.
2023/06/16 11:52:33 - mmengine - INFO - Iter(train) [ 900/8000]  lr: 4.9008e-03  eta: 0:17:23  time: 0.1408  data_time: 0.0060  memory: 1906  loss: 0.6065  decode.loss_ce: 0.4243  decode.acc_seg: 91.0156  aux.loss_ce: 0.1822  aux.acc_seg: 89.0477
2023/06/16 11:52:48 - mmengine - INFO - Exp name: pspnet-Watermelon87_Semantic_Seg_Mask_20230616_20230616_114954
2023/06/16 11:52:48 - mmengine - INFO - Iter(train) [1000/8000]  lr: 4.8897e-03  eta: 0:17:07  time: 0.1427  data_time: 0.0075  memory: 1906  loss: 0.3850  decode.loss_ce: 0.2616  decode.acc_seg: 94.4758  aux.loss_ce: 0.1234  aux.acc_seg: 90.4892
2023/06/16 11:52:48 - mmengine - INFO - Saving checkpoint at 1000 iterations
2023/06/16 11:53:03 - mmengine - INFO - Iter(train) [1100/8000]  lr: 4.8787e-03  eta: 0:16:58  time: 0.1487  data_time: 0.0111  memory: 1906  loss: 0.4475  decode.loss_ce: 0.3083  decode.acc_seg: 90.2298  aux.loss_ce: 0.1392  aux.acc_seg: 88.5600
2023/06/16 11:53:18 - mmengine - INFO - Iter(train) [1200/8000]  lr: 4.8676e-03  eta: 0:16:42  time: 0.1569  data_time: 0.0119  memory: 1906  loss: 0.4656  decode.loss_ce: 0.3205  decode.acc_seg: 85.2763  aux.loss_ce: 0.1451  aux.acc_seg: 82.6487
2023/06/16 11:53:21 - mmengine - INFO - per class results:
2023/06/16 11:53:21 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     | 90.09 | 96.21 |
|   Green    | 85.03 | 93.09 |
|   White    | 64.26 | 68.44 |
| Seed-black | 78.31 | 85.51 |
| Seed-white | 58.26 | 61.46 |
| Unlabeled  |  0.0  |  0.0  |
+------------+-------+-------+
2023/06/16 11:53:21 - mmengine - INFO - Iter(val) [11/11]  aAcc: 92.3700  mIoU: 62.6600  mAcc: 67.4500  data_time: 0.0016  time: 0.2550
2023/06/16 11:53:21 - mmengine - INFO - The previous best checkpoint /home/cine/Documents/GitHub/mmsegmentation/work_dirs/Watermelon87_Semantic_Seg_Mask/best_mAcc_iter_400.pth is removed
2023/06/16 11:53:21 - mmengine - INFO - The best checkpoint with 67.4500 mAcc at 1200 iter is saved to best_mAcc_iter_1200.pth.
2023/06/16 11:53:22 - mmengine - INFO - The previous best checkpoint /home/cine/Documents/GitHub/mmsegmentation/work_dirs/Watermelon87_Semantic_Seg_Mask/best_mIoU_iter_800.pth is removed
2023/06/16 11:53:22 - mmengine - INFO - The best checkpoint with 62.6600 mIoU at 1200 iter is saved to best_mIoU_iter_1200.pth.
2023/06/16 11:53:37 - mmengine - INFO - Iter(train) [1300/8000]  lr: 4.8565e-03  eta: 0:16:35  time: 0.1432  data_time: 0.0069  memory: 1906  loss: 0.3839  decode.loss_ce: 0.2702  decode.acc_seg: 87.8708  aux.loss_ce: 0.1137  aux.acc_seg: 87.0656
2023/06/16 11:53:51 - mmengine - INFO - Iter(train) [1400/8000]  lr: 4.8455e-03  eta: 0:16:19  time: 0.1469  data_time: 0.0066  memory: 1906  loss: 0.3990  decode.loss_ce: 0.2768  decode.acc_seg: 95.1075  aux.loss_ce: 0.1222  aux.acc_seg: 95.5902
2023/06/16 11:54:06 - mmengine - INFO - Iter(train) [1500/8000]  lr: 4.8344e-03  eta: 0:16:03  time: 0.1420  data_time: 0.0068  memory: 1906  loss: 0.4237  decode.loss_ce: 0.2895  decode.acc_seg: 90.7908  aux.loss_ce: 0.1342  aux.acc_seg: 90.5604
2023/06/16 11:54:21 - mmengine - INFO - Iter(train) [1600/8000]  lr: 4.8233e-03  eta: 0:15:47  time: 0.1437  data_time: 0.0073  memory: 1906  loss: 0.4595  decode.loss_ce: 0.3172  decode.acc_seg: 88.8128  aux.loss_ce: 0.1422  aux.acc_seg: 86.5865
2023/06/16 11:54:23 - mmengine - INFO - per class results:
2023/06/16 11:54:23 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     |  87.7 | 95.35 |
|   Green    | 79.02 | 83.38 |
|   White    | 74.47 | 92.35 |
| Seed-black |  81.0 | 89.16 |
| Seed-white | 38.49 | 39.85 |
| Unlabeled  |  0.0  |  0.0  |
+------------+-------+-------+
2023/06/16 11:54:23 - mmengine - INFO - Iter(val) [11/11]  aAcc: 91.0400  mIoU: 60.1100  mAcc: 66.6800  data_time: 0.0017  time: 0.2534
2023/06/16 11:54:38 - mmengine - INFO - Iter(train) [1700/8000]  lr: 4.8123e-03  eta: 0:15:33  time: 0.1562  data_time: 0.0074  memory: 1906  loss: 0.5320  decode.loss_ce: 0.3744  decode.acc_seg: 80.4932  aux.loss_ce: 0.1577  aux.acc_seg: 78.9393
2023/06/16 11:54:53 - mmengine - INFO - Iter(train) [1800/8000]  lr: 4.8012e-03  eta: 0:15:17  time: 0.1452  data_time: 0.0097  memory: 1906  loss: 0.4521  decode.loss_ce: 0.3138  decode.acc_seg: 87.3001  aux.loss_ce: 0.1384  aux.acc_seg: 86.1359
2023/06/16 11:55:08 - mmengine - INFO - Iter(train) [1900/8000]  lr: 4.7901e-03  eta: 0:15:02  time: 0.1438  data_time: 0.0067  memory: 1906  loss: 0.4844  decode.loss_ce: 0.3395  decode.acc_seg: 90.5965  aux.loss_ce: 0.1448  aux.acc_seg: 91.0477
2023/06/16 11:55:22 - mmengine - INFO - Exp name: pspnet-Watermelon87_Semantic_Seg_Mask_20230616_20230616_114954
2023/06/16 11:55:22 - mmengine - INFO - Iter(train) [2000/8000]  lr: 4.7790e-03  eta: 0:14:47  time: 0.1436  data_time: 0.0074  memory: 1906  loss: 0.3525  decode.loss_ce: 0.2437  decode.acc_seg: 87.6856  aux.loss_ce: 0.1087  aux.acc_seg: 88.1337
2023/06/16 11:55:22 - mmengine - INFO - Saving checkpoint at 2000 iterations
2023/06/16 11:55:26 - mmengine - INFO - per class results:
2023/06/16 11:55:26 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     | 94.44 | 97.05 |
|   Green    | 91.11 | 96.02 |
|   White    | 81.28 | 90.57 |
| Seed-black | 81.83 | 90.37 |
| Seed-white |  49.9 | 50.89 |
| Unlabeled  |  0.16 |  0.16 |
+------------+-------+-------+
2023/06/16 11:55:26 - mmengine - INFO - Iter(val) [11/11]  aAcc: 95.4300  mIoU: 66.4500  mAcc: 70.8400  data_time: 0.0018  time: 0.2523
2023/06/16 11:55:26 - mmengine - INFO - The previous best checkpoint /home/cine/Documents/GitHub/mmsegmentation/work_dirs/Watermelon87_Semantic_Seg_Mask/best_mAcc_iter_1200.pth is removed
2023/06/16 11:55:27 - mmengine - INFO - The best checkpoint with 70.8400 mAcc at 2000 iter is saved to best_mAcc_iter_2000.pth.
2023/06/16 11:55:27 - mmengine - INFO - The previous best checkpoint /home/cine/Documents/GitHub/mmsegmentation/work_dirs/Watermelon87_Semantic_Seg_Mask/best_mIoU_iter_1200.pth is removed
2023/06/16 11:55:28 - mmengine - INFO - The best checkpoint with 66.4500 mIoU at 2000 iter is saved to best_mIoU_iter_2000.pth.
2023/06/16 11:55:42 - mmengine - INFO - Iter(train) [2100/8000]  lr: 4.7680e-03  eta: 0:14:36  time: 0.1511  data_time: 0.0068  memory: 1906  loss: 0.4216  decode.loss_ce: 0.2852  decode.acc_seg: 94.8619  aux.loss_ce: 0.1364  aux.acc_seg: 94.3019
2023/06/16 11:55:57 - mmengine - INFO - Iter(train) [2200/8000]  lr: 4.7569e-03  eta: 0:14:21  time: 0.1432  data_time: 0.0065  memory: 1906  loss: 0.4035  decode.loss_ce: 0.2732  decode.acc_seg: 87.5575  aux.loss_ce: 0.1303  aux.acc_seg: 87.3967
2023/06/16 11:56:12 - mmengine - INFO - Iter(train) [2300/8000]  lr: 4.7458e-03  eta: 0:14:05  time: 0.1434  data_time: 0.0062  memory: 1906  loss: 0.4446  decode.loss_ce: 0.3094  decode.acc_seg: 84.1629  aux.loss_ce: 0.1352  aux.acc_seg: 84.1197
2023/06/16 11:56:27 - mmengine - INFO - Iter(train) [2400/8000]  lr: 4.7347e-03  eta: 0:13:51  time: 0.1441  data_time: 0.0080  memory: 1906  loss: 0.3653  decode.loss_ce: 0.2507  decode.acc_seg: 94.8924  aux.loss_ce: 0.1147  aux.acc_seg: 94.3568
2023/06/16 11:56:29 - mmengine - INFO - per class results:
2023/06/16 11:56:29 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     | 91.98 | 95.03 |
|   Green    | 87.17 | 94.03 |
|   White    | 82.19 | 92.92 |
| Seed-black | 78.59 | 91.54 |
| Seed-white | 46.94 | 47.27 |
| Unlabeled  |  0.2  |  0.2  |
+------------+-------+-------+
2023/06/16 11:56:29 - mmengine - INFO - Iter(val) [11/11]  aAcc: 93.9300  mIoU: 64.5100  mAcc: 70.1600  data_time: 0.0015  time: 0.2531
2023/06/16 11:56:44 - mmengine - INFO - Iter(train) [2500/8000]  lr: 4.7236e-03  eta: 0:13:35  time: 0.1537  data_time: 0.0067  memory: 1906  loss: 0.3479  decode.loss_ce: 0.2425  decode.acc_seg: 89.9353  aux.loss_ce: 0.1054  aux.acc_seg: 89.3387
2023/06/16 11:56:58 - mmengine - INFO - Iter(train) [2600/8000]  lr: 4.7125e-03  eta: 0:13:20  time: 0.1437  data_time: 0.0080  memory: 1906  loss: 0.4213  decode.loss_ce: 0.2869  decode.acc_seg: 87.4095  aux.loss_ce: 0.1344  aux.acc_seg: 88.5834
2023/06/16 11:57:13 - mmengine - INFO - Iter(train) [2700/8000]  lr: 4.7014e-03  eta: 0:13:04  time: 0.1446  data_time: 0.0064  memory: 1906  loss: 0.3688  decode.loss_ce: 0.2513  decode.acc_seg: 86.9939  aux.loss_ce: 0.1175  aux.acc_seg: 87.2208
2023/06/16 11:57:27 - mmengine - INFO - Iter(train) [2800/8000]  lr: 4.6903e-03  eta: 0:12:49  time: 0.1473  data_time: 0.0071  memory: 1906  loss: 0.3112  decode.loss_ce: 0.2088  decode.acc_seg: 93.7266  aux.loss_ce: 0.1024  aux.acc_seg: 92.9916
2023/06/16 11:57:30 - mmengine - INFO - per class results:
2023/06/16 11:57:30 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     | 95.74 | 97.91 |
|   Green    | 92.64 | 96.06 |
|   White    | 84.87 | 91.66 |
| Seed-black | 82.93 | 92.68 |
| Seed-white | 57.31 | 59.04 |
| Unlabeled  |  32.0 | 35.35 |
+------------+-------+-------+
2023/06/16 11:57:30 - mmengine - INFO - Iter(val) [11/11]  aAcc: 96.2900  mIoU: 74.2500  mAcc: 78.7800  data_time: 0.0016  time: 0.2572
2023/06/16 11:57:30 - mmengine - INFO - The previous best checkpoint /home/cine/Documents/GitHub/mmsegmentation/work_dirs/Watermelon87_Semantic_Seg_Mask/best_mAcc_iter_2000.pth is removed
2023/06/16 11:57:31 - mmengine - INFO - The best checkpoint with 78.7800 mAcc at 2800 iter is saved to best_mAcc_iter_2800.pth.
2023/06/16 11:57:31 - mmengine - INFO - The previous best checkpoint /home/cine/Documents/GitHub/mmsegmentation/work_dirs/Watermelon87_Semantic_Seg_Mask/best_mIoU_iter_2000.pth is removed
2023/06/16 11:57:32 - mmengine - INFO - The best checkpoint with 74.2500 mIoU at 2800 iter is saved to best_mIoU_iter_2800.pth.
2023/06/16 11:57:47 - mmengine - INFO - Iter(train) [2900/8000]  lr: 4.6792e-03  eta: 0:12:37  time: 0.1551  data_time: 0.0068  memory: 1906  loss: 0.4309  decode.loss_ce: 0.3049  decode.acc_seg: 93.8934  aux.loss_ce: 0.1260  aux.acc_seg: 93.3940
2023/06/16 11:58:02 - mmengine - INFO - Exp name: pspnet-Watermelon87_Semantic_Seg_Mask_20230616_20230616_114954
2023/06/16 11:58:02 - mmengine - INFO - Iter(train) [3000/8000]  lr: 4.6681e-03  eta: 0:12:22  time: 0.1432  data_time: 0.0070  memory: 1906  loss: 0.3274  decode.loss_ce: 0.2258  decode.acc_seg: 85.3099  aux.loss_ce: 0.1015  aux.acc_seg: 87.5463
2023/06/16 11:58:02 - mmengine - INFO - Saving checkpoint at 3000 iterations
2023/06/16 11:58:17 - mmengine - INFO - Iter(train) [3100/8000]  lr: 4.6570e-03  eta: 0:12:08  time: 0.1433  data_time: 0.0073  memory: 1906  loss: 0.3787  decode.loss_ce: 0.2587  decode.acc_seg: 88.6958  aux.loss_ce: 0.1200  aux.acc_seg: 86.9136
2023/06/16 11:58:32 - mmengine - INFO - Iter(train) [3200/8000]  lr: 4.6458e-03  eta: 0:11:53  time: 0.1468  data_time: 0.0070  memory: 1906  loss: 0.3319  decode.loss_ce: 0.2270  decode.acc_seg: 95.8521  aux.loss_ce: 0.1049  aux.acc_seg: 94.5592
2023/06/16 11:58:35 - mmengine - INFO - per class results:
2023/06/16 11:58:35 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     | 91.29 | 93.97 |
|   Green    | 86.97 | 95.08 |
|   White    | 76.77 | 93.82 |
| Seed-black | 84.01 | 90.28 |
| Seed-white | 54.54 |  56.1 |
| Unlabeled  | 44.52 | 52.39 |
+------------+-------+-------+
2023/06/16 11:58:35 - mmengine - INFO - Iter(val) [11/11]  aAcc: 93.7100  mIoU: 73.0200  mAcc: 80.2700  data_time: 0.0016  time: 0.2588
2023/06/16 11:58:35 - mmengine - INFO - The previous best checkpoint /home/cine/Documents/GitHub/mmsegmentation/work_dirs/Watermelon87_Semantic_Seg_Mask/best_mAcc_iter_2800.pth is removed
2023/06/16 11:58:35 - mmengine - INFO - The best checkpoint with 80.2700 mAcc at 3200 iter is saved to best_mAcc_iter_3200.pth.
2023/06/16 11:58:50 - mmengine - INFO - Iter(train) [3300/8000]  lr: 4.6347e-03  eta: 0:11:39  time: 0.1445  data_time: 0.0083  memory: 1906  loss: 0.3345  decode.loss_ce: 0.2262  decode.acc_seg: 91.7730  aux.loss_ce: 0.1083  aux.acc_seg: 88.8880
2023/06/16 11:59:05 - mmengine - INFO - Iter(train) [3400/8000]  lr: 4.6236e-03  eta: 0:11:24  time: 0.1436  data_time: 0.0072  memory: 1906  loss: 0.3503  decode.loss_ce: 0.2437  decode.acc_seg: 90.1535  aux.loss_ce: 0.1066  aux.acc_seg: 90.4119
2023/06/16 11:59:20 - mmengine - INFO - Iter(train) [3500/8000]  lr: 4.6125e-03  eta: 0:11:09  time: 0.1484  data_time: 0.0066  memory: 1906  loss: 0.2791  decode.loss_ce: 0.1895  decode.acc_seg: 94.0414  aux.loss_ce: 0.0897  aux.acc_seg: 92.2541
2023/06/16 11:59:34 - mmengine - INFO - Iter(train) [3600/8000]  lr: 4.6014e-03  eta: 0:10:53  time: 0.1428  data_time: 0.0065  memory: 1906  loss: 0.4024  decode.loss_ce: 0.2690  decode.acc_seg: 91.9505  aux.loss_ce: 0.1335  aux.acc_seg: 90.8366
2023/06/16 11:59:37 - mmengine - INFO - per class results:
2023/06/16 11:59:37 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     | 89.99 | 95.88 |
|   Green    | 82.29 | 86.03 |
|   White    | 83.18 | 93.42 |
| Seed-black | 74.57 | 90.74 |
| Seed-white | 63.58 | 68.74 |
| Unlabeled  | 46.81 | 58.84 |
+------------+-------+-------+
2023/06/16 11:59:37 - mmengine - INFO - Iter(val) [11/11]  aAcc: 92.5200  mIoU: 73.4000  mAcc: 82.2700  data_time: 0.0016  time: 0.2533
2023/06/16 11:59:37 - mmengine - INFO - The previous best checkpoint /home/cine/Documents/GitHub/mmsegmentation/work_dirs/Watermelon87_Semantic_Seg_Mask/best_mAcc_iter_3200.pth is removed
2023/06/16 11:59:38 - mmengine - INFO - The best checkpoint with 82.2700 mAcc at 3600 iter is saved to best_mAcc_iter_3600.pth.
2023/06/16 11:59:53 - mmengine - INFO - Iter(train) [3700/8000]  lr: 4.5902e-03  eta: 0:10:40  time: 0.1567  data_time: 0.0070  memory: 1906  loss: 0.3453  decode.loss_ce: 0.2279  decode.acc_seg: 89.9857  aux.loss_ce: 0.1174  aux.acc_seg: 88.4318
2023/06/16 12:00:07 - mmengine - INFO - Iter(train) [3800/8000]  lr: 4.5791e-03  eta: 0:10:25  time: 0.1529  data_time: 0.0066  memory: 1906  loss: 0.4184  decode.loss_ce: 0.2941  decode.acc_seg: 88.8423  aux.loss_ce: 0.1243  aux.acc_seg: 85.4670
2023/06/16 12:00:22 - mmengine - INFO - Iter(train) [3900/8000]  lr: 4.5680e-03  eta: 0:10:09  time: 0.1422  data_time: 0.0062  memory: 1906  loss: 0.3503  decode.loss_ce: 0.2435  decode.acc_seg: 89.7273  aux.loss_ce: 0.1067  aux.acc_seg: 91.9250
2023/06/16 12:00:36 - mmengine - INFO - Exp name: pspnet-Watermelon87_Semantic_Seg_Mask_20230616_20230616_114954
2023/06/16 12:00:36 - mmengine - INFO - Iter(train) [4000/8000]  lr: 4.5568e-03  eta: 0:09:54  time: 0.1443  data_time: 0.0071  memory: 1906  loss: 0.4014  decode.loss_ce: 0.2800  decode.acc_seg: 83.6665  aux.loss_ce: 0.1214  aux.acc_seg: 83.0917
2023/06/16 12:00:36 - mmengine - INFO - Saving checkpoint at 4000 iterations
2023/06/16 12:00:41 - mmengine - INFO - per class results:
2023/06/16 12:00:41 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     | 84.61 |  90.5 |
|   Green    | 82.13 | 85.78 |
|   White    | 57.75 | 93.38 |
| Seed-black | 77.75 | 91.44 |
| Seed-white |  57.6 | 58.86 |
| Unlabeled  | 42.94 | 49.25 |
+------------+-------+-------+
2023/06/16 12:00:41 - mmengine - INFO - Iter(val) [11/11]  aAcc: 89.2500  mIoU: 67.1300  mAcc: 78.2000  data_time: 0.0018  time: 0.2726
2023/06/16 12:00:55 - mmengine - INFO - Iter(train) [4100/8000]  lr: 4.5457e-03  eta: 0:09:39  time: 0.1418  data_time: 0.0062  memory: 1906  loss: 0.2702  decode.loss_ce: 0.1878  decode.acc_seg: 94.9590  aux.loss_ce: 0.0824  aux.acc_seg: 94.1315
2023/06/16 12:01:10 - mmengine - INFO - Iter(train) [4200/8000]  lr: 4.5345e-03  eta: 0:09:24  time: 0.1427  data_time: 0.0061  memory: 1906  loss: 0.3474  decode.loss_ce: 0.2377  decode.acc_seg: 91.7363  aux.loss_ce: 0.1097  aux.acc_seg: 91.7592
2023/06/16 12:01:24 - mmengine - INFO - Iter(train) [4300/8000]  lr: 4.5234e-03  eta: 0:09:09  time: 0.1516  data_time: 0.0075  memory: 1906  loss: 0.3014  decode.loss_ce: 0.2059  decode.acc_seg: 85.9512  aux.loss_ce: 0.0955  aux.acc_seg: 86.4360
2023/06/16 12:01:39 - mmengine - INFO - Iter(train) [4400/8000]  lr: 4.5122e-03  eta: 0:08:54  time: 0.1439  data_time: 0.0068  memory: 1906  loss: 0.2876  decode.loss_ce: 0.1996  decode.acc_seg: 93.9967  aux.loss_ce: 0.0880  aux.acc_seg: 93.0308
2023/06/16 12:01:42 - mmengine - INFO - per class results:
2023/06/16 12:01:42 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     |  80.8 | 97.25 |
|   Green    | 55.33 | 57.08 |
|   White    | 82.57 | 90.83 |
| Seed-black | 81.29 | 93.36 |
| Seed-white | 41.68 | 42.56 |
| Unlabeled  | 22.07 | 25.81 |
+------------+-------+-------+
2023/06/16 12:01:42 - mmengine - INFO - Iter(val) [11/11]  aAcc: 85.4100  mIoU: 60.6300  mAcc: 67.8200  data_time: 0.0017  time: 0.2544
2023/06/16 12:01:56 - mmengine - INFO - Iter(train) [4500/8000]  lr: 4.5011e-03  eta: 0:08:38  time: 0.1426  data_time: 0.0060  memory: 1906  loss: 0.3021  decode.loss_ce: 0.2054  decode.acc_seg: 88.8199  aux.loss_ce: 0.0967  aux.acc_seg: 88.1551
2023/06/16 12:02:10 - mmengine - INFO - Iter(train) [4600/8000]  lr: 4.4899e-03  eta: 0:08:23  time: 0.1442  data_time: 0.0079  memory: 1906  loss: 0.3116  decode.loss_ce: 0.2133  decode.acc_seg: 94.2159  aux.loss_ce: 0.0982  aux.acc_seg: 93.3899
2023/06/16 12:02:25 - mmengine - INFO - Iter(train) [4700/8000]  lr: 4.4787e-03  eta: 0:08:08  time: 0.1444  data_time: 0.0073  memory: 1906  loss: 0.3231  decode.loss_ce: 0.2219  decode.acc_seg: 88.5417  aux.loss_ce: 0.1012  aux.acc_seg: 88.4267
2023/06/16 12:02:39 - mmengine - INFO - Iter(train) [4800/8000]  lr: 4.4676e-03  eta: 0:07:53  time: 0.1438  data_time: 0.0059  memory: 1906  loss: 0.3838  decode.loss_ce: 0.2666  decode.acc_seg: 91.3925  aux.loss_ce: 0.1171  aux.acc_seg: 91.6580
2023/06/16 12:02:42 - mmengine - INFO - per class results:
2023/06/16 12:02:42 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     | 81.14 | 90.89 |
|   Green    | 75.51 | 77.79 |
|   White    | 53.98 | 92.39 |
| Seed-black | 83.31 | 88.44 |
| Seed-white | 18.92 | 18.95 |
| Unlabeled  | 27.03 | 28.83 |
+------------+-------+-------+
2023/06/16 12:02:42 - mmengine - INFO - Iter(val) [11/11]  aAcc: 86.8100  mIoU: 56.6500  mAcc: 66.2200  data_time: 0.0015  time: 0.2534
2023/06/16 12:02:57 - mmengine - INFO - Iter(train) [4900/8000]  lr: 4.4564e-03  eta: 0:07:38  time: 0.1524  data_time: 0.0082  memory: 1906  loss: 0.2927  decode.loss_ce: 0.2014  decode.acc_seg: 85.0749  aux.loss_ce: 0.0913  aux.acc_seg: 84.1761
2023/06/16 12:03:12 - mmengine - INFO - Exp name: pspnet-Watermelon87_Semantic_Seg_Mask_20230616_20230616_114954
2023/06/16 12:03:12 - mmengine - INFO - Iter(train) [5000/8000]  lr: 4.4452e-03  eta: 0:07:23  time: 0.1419  data_time: 0.0063  memory: 1906  loss: 0.3163  decode.loss_ce: 0.2126  decode.acc_seg: 89.6586  aux.loss_ce: 0.1038  aux.acc_seg: 89.8493
2023/06/16 12:03:12 - mmengine - INFO - Saving checkpoint at 5000 iterations
2023/06/16 12:03:28 - mmengine - INFO - Iter(train) [5100/8000]  lr: 4.4341e-03  eta: 0:07:09  time: 0.1533  data_time: 0.0176  memory: 1906  loss: 0.3245  decode.loss_ce: 0.2264  decode.acc_seg: 89.3127  aux.loss_ce: 0.0981  aux.acc_seg: 89.5986
2023/06/16 12:03:42 - mmengine - INFO - Iter(train) [5200/8000]  lr: 4.4229e-03  eta: 0:06:54  time: 0.1433  data_time: 0.0069  memory: 1906  loss: 0.3205  decode.loss_ce: 0.2152  decode.acc_seg: 87.0417  aux.loss_ce: 0.1054  aux.acc_seg: 86.0881
2023/06/16 12:03:45 - mmengine - INFO - per class results:
2023/06/16 12:03:45 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     | 82.24 | 97.04 |
|   Green    | 60.51 | 62.34 |
|   White    | 78.74 |  94.1 |
| Seed-black | 81.88 | 87.69 |
| Seed-white | 69.78 | 75.09 |
| Unlabeled  | 25.36 | 26.92 |
+------------+-------+-------+
2023/06/16 12:03:45 - mmengine - INFO - Iter(val) [11/11]  aAcc: 86.7100  mIoU: 66.4200  mAcc: 73.8600  data_time: 0.0017  time: 0.2535
2023/06/16 12:04:00 - mmengine - INFO - Iter(train) [5300/8000]  lr: 4.4117e-03  eta: 0:06:40  time: 0.1508  data_time: 0.0079  memory: 1906  loss: 0.3364  decode.loss_ce: 0.2294  decode.acc_seg: 85.9894  aux.loss_ce: 0.1070  aux.acc_seg: 84.6257
2023/06/16 12:04:14 - mmengine - INFO - Iter(train) [5400/8000]  lr: 4.4005e-03  eta: 0:06:25  time: 0.1420  data_time: 0.0064  memory: 1906  loss: 0.3220  decode.loss_ce: 0.2187  decode.acc_seg: 94.8558  aux.loss_ce: 0.1033  aux.acc_seg: 94.4743
2023/06/16 12:04:29 - mmengine - INFO - Iter(train) [5500/8000]  lr: 4.3893e-03  eta: 0:06:10  time: 0.1437  data_time: 0.0064  memory: 1906  loss: 0.2916  decode.loss_ce: 0.1991  decode.acc_seg: 95.8923  aux.loss_ce: 0.0926  aux.acc_seg: 95.1243
2023/06/16 12:04:43 - mmengine - INFO - Iter(train) [5600/8000]  lr: 4.3781e-03  eta: 0:05:55  time: 0.1533  data_time: 0.0071  memory: 1906  loss: 0.3012  decode.loss_ce: 0.2092  decode.acc_seg: 90.5558  aux.loss_ce: 0.0920  aux.acc_seg: 91.8945
2023/06/16 12:04:46 - mmengine - INFO - per class results:
2023/06/16 12:04:46 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     | 84.78 |  88.2 |
|   Green    | 88.18 | 91.81 |
|   White    | 49.27 |  94.6 |
| Seed-black | 82.61 | 91.11 |
| Seed-white | 52.71 | 53.42 |
| Unlabeled  | 35.46 | 37.11 |
+------------+-------+-------+
2023/06/16 12:04:46 - mmengine - INFO - Iter(val) [11/11]  aAcc: 89.5000  mIoU: 65.5000  mAcc: 76.0400  data_time: 0.0015  time: 0.2652
2023/06/16 12:05:01 - mmengine - INFO - Iter(train) [5700/8000]  lr: 4.3669e-03  eta: 0:05:40  time: 0.1438  data_time: 0.0072  memory: 1906  loss: 0.2563  decode.loss_ce: 0.1744  decode.acc_seg: 94.0084  aux.loss_ce: 0.0819  aux.acc_seg: 91.9159
2023/06/16 12:05:16 - mmengine - INFO - Iter(train) [5800/8000]  lr: 4.3557e-03  eta: 0:05:25  time: 0.1470  data_time: 0.0082  memory: 1906  loss: 0.2893  decode.loss_ce: 0.2003  decode.acc_seg: 87.6745  aux.loss_ce: 0.0889  aux.acc_seg: 86.5092
2023/06/16 12:05:31 - mmengine - INFO - Iter(train) [5900/8000]  lr: 4.3445e-03  eta: 0:05:10  time: 0.1564  data_time: 0.0066  memory: 1906  loss: 0.2842  decode.loss_ce: 0.1913  decode.acc_seg: 95.8211  aux.loss_ce: 0.0929  aux.acc_seg: 94.6431
2023/06/16 12:05:46 - mmengine - INFO - Exp name: pspnet-Watermelon87_Semantic_Seg_Mask_20230616_20230616_114954
2023/06/16 12:05:46 - mmengine - INFO - Iter(train) [6000/8000]  lr: 4.3333e-03  eta: 0:04:56  time: 0.1501  data_time: 0.0072  memory: 1906  loss: 0.3239  decode.loss_ce: 0.2154  decode.acc_seg: 85.6756  aux.loss_ce: 0.1085  aux.acc_seg: 79.6107
2023/06/16 12:05:46 - mmengine - INFO - Saving checkpoint at 6000 iterations
2023/06/16 12:05:51 - mmengine - INFO - per class results:
2023/06/16 12:05:51 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     | 91.44 | 96.67 |
|   Green    |  85.5 | 88.09 |
|   White    | 76.98 | 90.47 |
| Seed-black | 82.63 | 94.42 |
| Seed-white | 66.31 | 74.69 |
| Unlabeled  | 28.07 |  30.0 |
+------------+-------+-------+
2023/06/16 12:05:51 - mmengine - INFO - Iter(val) [11/11]  aAcc: 93.5600  mIoU: 71.8200  mAcc: 79.0600  data_time: 0.0019  time: 0.2529
2023/06/16 12:06:06 - mmengine - INFO - Iter(train) [6100/8000]  lr: 4.3221e-03  eta: 0:04:41  time: 0.1439  data_time: 0.0073  memory: 1906  loss: 0.2735  decode.loss_ce: 0.1850  decode.acc_seg: 90.1194  aux.loss_ce: 0.0885  aux.acc_seg: 86.9039
2023/06/16 12:06:20 - mmengine - INFO - Iter(train) [6200/8000]  lr: 4.3109e-03  eta: 0:04:26  time: 0.1449  data_time: 0.0076  memory: 1906  loss: 0.2852  decode.loss_ce: 0.1926  decode.acc_seg: 93.1051  aux.loss_ce: 0.0926  aux.acc_seg: 92.5115
2023/06/16 12:06:35 - mmengine - INFO - Iter(train) [6300/8000]  lr: 4.2997e-03  eta: 0:04:11  time: 0.1436  data_time: 0.0066  memory: 1906  loss: 0.2771  decode.loss_ce: 0.1890  decode.acc_seg: 90.8656  aux.loss_ce: 0.0881  aux.acc_seg: 87.0509
2023/06/16 12:06:49 - mmengine - INFO - Iter(train) [6400/8000]  lr: 4.2885e-03  eta: 0:03:56  time: 0.1464  data_time: 0.0077  memory: 1906  loss: 0.3083  decode.loss_ce: 0.2108  decode.acc_seg: 94.8262  aux.loss_ce: 0.0974  aux.acc_seg: 93.6172
2023/06/16 12:06:52 - mmengine - INFO - per class results:
2023/06/16 12:06:52 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     | 78.29 | 96.72 |
|   Green    | 50.41 | 51.64 |
|   White    | 70.01 | 84.27 |
| Seed-black | 77.98 | 88.73 |
| Seed-white | 59.99 | 63.14 |
| Unlabeled  | 44.23 | 55.37 |
+------------+-------+-------+
2023/06/16 12:06:52 - mmengine - INFO - Iter(val) [11/11]  aAcc: 83.0600  mIoU: 63.4800  mAcc: 73.3100  data_time: 0.0017  time: 0.2548
2023/06/16 12:07:07 - mmengine - INFO - Iter(train) [6500/8000]  lr: 4.2773e-03  eta: 0:03:41  time: 0.1458  data_time: 0.0073  memory: 1906  loss: 0.2685  decode.loss_ce: 0.1821  decode.acc_seg: 91.3783  aux.loss_ce: 0.0864  aux.acc_seg: 91.5273
2023/06/16 12:07:21 - mmengine - INFO - Iter(train) [6600/8000]  lr: 4.2660e-03  eta: 0:03:27  time: 0.1447  data_time: 0.0063  memory: 1906  loss: 0.3307  decode.loss_ce: 0.2217  decode.acc_seg: 92.7668  aux.loss_ce: 0.1090  aux.acc_seg: 90.5396
2023/06/16 12:07:36 - mmengine - INFO - Iter(train) [6700/8000]  lr: 4.2548e-03  eta: 0:03:12  time: 0.1521  data_time: 0.0080  memory: 1906  loss: 0.2548  decode.loss_ce: 0.1739  decode.acc_seg: 92.5949  aux.loss_ce: 0.0809  aux.acc_seg: 91.0248
2023/06/16 12:07:51 - mmengine - INFO - Iter(train) [6800/8000]  lr: 4.2436e-03  eta: 0:02:57  time: 0.1451  data_time: 0.0065  memory: 1906  loss: 0.2695  decode.loss_ce: 0.1823  decode.acc_seg: 91.2211  aux.loss_ce: 0.0872  aux.acc_seg: 90.7725
2023/06/16 12:07:54 - mmengine - INFO - per class results:
2023/06/16 12:07:54 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     |  76.1 | 83.21 |
|   Green    | 79.62 | 82.21 |
|   White    | 39.43 | 94.13 |
| Seed-black |  81.1 | 86.44 |
| Seed-white | 55.01 |  56.3 |
| Unlabeled  |  29.8 |  32.3 |
+------------+-------+-------+
2023/06/16 12:07:54 - mmengine - INFO - Iter(val) [11/11]  aAcc: 83.6600  mIoU: 60.1800  mAcc: 72.4300  data_time: 0.0016  time: 0.2543
2023/06/16 12:08:08 - mmengine - INFO - Iter(train) [6900/8000]  lr: 4.2323e-03  eta: 0:02:42  time: 0.1427  data_time: 0.0065  memory: 1906  loss: 0.2470  decode.loss_ce: 0.1693  decode.acc_seg: 93.9194  aux.loss_ce: 0.0777  aux.acc_seg: 92.9423
2023/06/16 12:08:23 - mmengine - INFO - Exp name: pspnet-Watermelon87_Semantic_Seg_Mask_20230616_20230616_114954
2023/06/16 12:08:23 - mmengine - INFO - Iter(train) [7000/8000]  lr: 4.2211e-03  eta: 0:02:27  time: 0.1487  data_time: 0.0067  memory: 1906  loss: 0.2627  decode.loss_ce: 0.1822  decode.acc_seg: 91.2796  aux.loss_ce: 0.0805  aux.acc_seg: 94.1162
2023/06/16 12:08:23 - mmengine - INFO - Saving checkpoint at 7000 iterations
2023/06/16 12:08:39 - mmengine - INFO - Iter(train) [7100/8000]  lr: 4.2099e-03  eta: 0:02:13  time: 0.1450  data_time: 0.0073  memory: 1906  loss: 0.3262  decode.loss_ce: 0.2225  decode.acc_seg: 90.5009  aux.loss_ce: 0.1037  aux.acc_seg: 91.5080
2023/06/16 12:08:54 - mmengine - INFO - Iter(train) [7200/8000]  lr: 4.1986e-03  eta: 0:01:58  time: 0.1426  data_time: 0.0069  memory: 1906  loss: 0.2551  decode.loss_ce: 0.1716  decode.acc_seg: 93.5918  aux.loss_ce: 0.0835  aux.acc_seg: 92.2928
2023/06/16 12:08:57 - mmengine - INFO - per class results:
2023/06/16 12:08:57 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     | 81.31 |  95.1 |
|   Green    | 62.29 | 63.79 |
|   White    | 69.49 | 92.58 |
| Seed-black | 83.88 | 93.65 |
| Seed-white | 69.26 | 74.11 |
| Unlabeled  | 26.85 | 27.24 |
+------------+-------+-------+
2023/06/16 12:08:57 - mmengine - INFO - Iter(val) [11/11]  aAcc: 86.2500  mIoU: 65.5100  mAcc: 74.4100  data_time: 0.0015  time: 0.2716
2023/06/16 12:09:12 - mmengine - INFO - Iter(train) [7300/8000]  lr: 4.1874e-03  eta: 0:01:43  time: 0.1514  data_time: 0.0139  memory: 1906  loss: 0.3370  decode.loss_ce: 0.2300  decode.acc_seg: 87.3062  aux.loss_ce: 0.1070  aux.acc_seg: 87.3271
2023/06/16 12:09:27 - mmengine - INFO - Iter(train) [7400/8000]  lr: 4.1761e-03  eta: 0:01:28  time: 0.1542  data_time: 0.0080  memory: 1906  loss: 0.3195  decode.loss_ce: 0.2224  decode.acc_seg: 92.4052  aux.loss_ce: 0.0971  aux.acc_seg: 91.1636
2023/06/16 12:09:42 - mmengine - INFO - Iter(train) [7500/8000]  lr: 4.1649e-03  eta: 0:01:14  time: 0.1456  data_time: 0.0074  memory: 1906  loss: 0.2881  decode.loss_ce: 0.1971  decode.acc_seg: 94.3420  aux.loss_ce: 0.0911  aux.acc_seg: 91.8818
2023/06/16 12:09:56 - mmengine - INFO - Iter(train) [7600/8000]  lr: 4.1536e-03  eta: 0:00:59  time: 0.1523  data_time: 0.0071  memory: 1906  loss: 0.3140  decode.loss_ce: 0.2125  decode.acc_seg: 88.1439  aux.loss_ce: 0.1015  aux.acc_seg: 88.1124
2023/06/16 12:09:59 - mmengine - INFO - per class results:
2023/06/16 12:09:59 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     | 92.13 | 96.03 |
|   Green    | 87.87 | 91.65 |
|   White    | 77.85 | 91.88 |
| Seed-black | 84.83 | 93.94 |
| Seed-white | 68.25 | 73.52 |
| Unlabeled  | 52.67 |  73.6 |
+------------+-------+-------+
2023/06/16 12:09:59 - mmengine - INFO - Iter(val) [11/11]  aAcc: 94.2700  mIoU: 77.2600  mAcc: 86.7700  data_time: 0.0016  time: 0.2658
2023/06/16 12:09:59 - mmengine - INFO - The previous best checkpoint /home/cine/Documents/GitHub/mmsegmentation/work_dirs/Watermelon87_Semantic_Seg_Mask/best_mAcc_iter_3600.pth is removed
2023/06/16 12:10:00 - mmengine - INFO - The best checkpoint with 86.7700 mAcc at 7600 iter is saved to best_mAcc_iter_7600.pth.
2023/06/16 12:10:00 - mmengine - INFO - The previous best checkpoint /home/cine/Documents/GitHub/mmsegmentation/work_dirs/Watermelon87_Semantic_Seg_Mask/best_mIoU_iter_2800.pth is removed
2023/06/16 12:10:01 - mmengine - INFO - The best checkpoint with 77.2600 mIoU at 7600 iter is saved to best_mIoU_iter_7600.pth.
2023/06/16 12:10:16 - mmengine - INFO - Iter(train) [7700/8000]  lr: 4.1424e-03  eta: 0:00:44  time: 0.1493  data_time: 0.0069  memory: 1906  loss: 0.2613  decode.loss_ce: 0.1787  decode.acc_seg: 93.1798  aux.loss_ce: 0.0826  aux.acc_seg: 91.9062
2023/06/16 12:10:31 - mmengine - INFO - Iter(train) [7800/8000]  lr: 4.1311e-03  eta: 0:00:29  time: 0.1426  data_time: 0.0064  memory: 1906  loss: 0.2237  decode.loss_ce: 0.1526  decode.acc_seg: 96.6069  aux.loss_ce: 0.0711  aux.acc_seg: 96.5993
2023/06/16 12:10:46 - mmengine - INFO - Iter(train) [7900/8000]  lr: 4.1198e-03  eta: 0:00:14  time: 0.1426  data_time: 0.0060  memory: 1906  loss: 0.3171  decode.loss_ce: 0.2162  decode.acc_seg: 87.2731  aux.loss_ce: 0.1008  aux.acc_seg: 88.1200
2023/06/16 12:11:00 - mmengine - INFO - Exp name: pspnet-Watermelon87_Semantic_Seg_Mask_20230616_20230616_114954
2023/06/16 12:11:00 - mmengine - INFO - Iter(train) [8000/8000]  lr: 4.1085e-03  eta: 0:00:00  time: 0.1431  data_time: 0.0067  memory: 1906  loss: 0.3048  decode.loss_ce: 0.2138  decode.acc_seg: 89.4028  aux.loss_ce: 0.0910  aux.acc_seg: 91.6845
2023/06/16 12:11:00 - mmengine - INFO - Saving checkpoint at 8000 iterations
2023/06/16 12:11:05 - mmengine - INFO - per class results:
2023/06/16 12:11:05 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    Red     | 72.25 | 82.82 |
|   Green    | 67.81 | 70.25 |
|   White    | 39.09 | 92.64 |
| Seed-black | 82.19 | 89.35 |
| Seed-white | 61.89 | 64.12 |
| Unlabeled  | 44.26 |  45.6 |
+------------+-------+-------+
2023/06/16 12:11:05 - mmengine - INFO - Iter(val) [11/11]  aAcc: 80.4200  mIoU: 61.2500  mAcc: 74.1300  data_time: 0.0017  time: 0.2714
