2023/06/10 14:18:24 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 819668130
    GPU 0: NVIDIA GeForce GTX 1080 Ti
    CUDA_HOME: /usr/local/cuda-11.6
    NVCC: Cuda compilation tools, release 11.6, V11.6.124
    GCC: gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0
    PyTorch: 1.10.1+cu113
    PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

    TorchVision: 0.11.2+cu113
    OpenCV: 4.7.0
    MMEngine: 0.7.1

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: None
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/10 14:18:25 - mmengine - INFO - Config:
default_scope = 'mmdet'
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=5),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook', interval=5, max_keep_ckpts=2, save_best='auto'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='DetVisualizationHook'))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='DetLocalVisualizer',
    vis_backends=[dict(type='LocalVisBackend')],
    name='visualizer')
log_processor = dict(type='LogProcessor', window_size=50, by_epoch=True)
log_level = 'INFO'
load_from = 'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_tiny_8xb32-300e_coco/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth'
resume = False
train_cfg = dict(
    type='EpochBasedTrainLoop',
    max_epochs=40,
    val_interval=5,
    dynamic_intervals=[(280, 1)])
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
param_scheduler = [
    dict(type='LinearLR', start_factor=1e-05, by_epoch=False, begin=0, end=30),
    dict(
        type='CosineAnnealingLR',
        eta_min=9.375000000000001e-06,
        begin=20,
        end=40,
        T_max=20,
        by_epoch=True,
        convert_to_iter_based=True)
]
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='AdamW', lr=0.0001875, weight_decay=0.05),
    paramwise_cfg=dict(
        norm_decay_mult=0, bias_decay_mult=0, bypass_duplicate=True))
auto_scale_lr = dict(enable=False, base_batch_size=16)
dataset_type = 'CocoDataset'
data_root = './data/Drink_284_Detection_coco/'
backend_args = None
train_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='CachedMosaic',
        img_scale=(640, 640),
        pad_val=114.0,
        max_cached_images=20,
        random_pop=False),
    dict(
        type='RandomResize',
        scale=(1280, 1280),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(
        type='CachedMixUp',
        img_scale=(640, 640),
        ratio_range=(1.0, 1.0),
        max_cached_images=10,
        random_pop=False,
        pad_val=(114, 114, 114),
        prob=0.5),
    dict(type='PackDetInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='Resize', scale=(640, 640), keep_ratio=True),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='PackDetInputs',
        meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                   'scale_factor'))
]
train_dataloader = dict(
    batch_size=12,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=True),
    batch_sampler=None,
    dataset=dict(
        type='CocoDataset',
        data_root='./data/Drink_284_Detection_coco/',
        ann_file='train_coco.json',
        data_prefix=dict(img='images/'),
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='CachedMosaic',
                img_scale=(640, 640),
                pad_val=114.0,
                max_cached_images=20,
                random_pop=False),
            dict(
                type='RandomResize',
                scale=(1280, 1280),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='CachedMixUp',
                img_scale=(640, 640),
                ratio_range=(1.0, 1.0),
                max_cached_images=10,
                random_pop=False,
                pad_val=(114, 114, 114),
                prob=0.5),
            dict(type='PackDetInputs')
        ],
        backend_args=None,
        metainfo=dict(
            classes=('cola', 'pepsi', 'sprite', 'fanta', 'spring', 'ice',
                     'scream', 'milk', 'red', 'king'),
            palette=[(101, 205, 228), (240, 128, 128), (154, 205, 50),
                     (34, 139, 34), (139, 0, 0), (255, 165, 0), (255, 0, 255),
                     (255, 255, 0), (29, 123, 243), (0, 255, 255)])),
    pin_memory=False)
val_dataloader = dict(
    batch_size=1,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='./data/Drink_284_Detection_coco/',
        ann_file='val_coco.json',
        data_prefix=dict(img='images/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None,
        metainfo=dict(
            classes=('cola', 'pepsi', 'sprite', 'fanta', 'spring', 'ice',
                     'scream', 'milk', 'red', 'king'),
            palette=[(101, 205, 228), (240, 128, 128), (154, 205, 50),
                     (34, 139, 34), (139, 0, 0), (255, 165, 0), (255, 0, 255),
                     (255, 255, 0), (29, 123, 243), (0, 255, 255)])))
test_dataloader = dict(
    batch_size=1,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='./data/Drink_284_Detection_coco/',
        ann_file='val_coco.json',
        data_prefix=dict(img='images/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None,
        metainfo=dict(
            classes=('cola', 'pepsi', 'sprite', 'fanta', 'spring', 'ice',
                     'scream', 'milk', 'red', 'king'),
            palette=[(101, 205, 228), (240, 128, 128), (154, 205, 50),
                     (34, 139, 34), (139, 0, 0), (255, 165, 0), (255, 0, 255),
                     (255, 255, 0), (29, 123, 243), (0, 255, 255)])))
val_evaluator = dict(
    type='CocoMetric',
    ann_file='./data/Drink_284_Detection_coco/val_coco.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
test_evaluator = dict(
    type='CocoMetric',
    ann_file='./data/Drink_284_Detection_coco/val_coco.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
tta_model = dict(
    type='DetTTAModel',
    tta_cfg=dict(nms=dict(type='nms', iou_threshold=0.6), max_per_img=100))
img_scales = [(640, 640), (320, 320), (960, 960)]
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale': (640, 640),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (320, 320),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (960, 960),
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 1.0
                    }, {
                        'type': 'RandomFlip',
                        'prob': 0.0
                    }],
                    [{
                        'type': 'Pad',
                        'size': (960, 960),
                        'pad_val': {
                            'img': (114, 114, 114)
                        }
                    }], [{
                        'type': 'LoadAnnotations',
                        'with_bbox': True
                    }],
                    [{
                        'type':
                        'PackDetInputs',
                        'meta_keys':
                        ('img_id', 'img_path', 'ori_shape', 'img_shape',
                         'scale_factor', 'flip', 'flip_direction')
                    }]])
]
model = dict(
    type='RTMDet',
    data_preprocessor=dict(
        type='DetDataPreprocessor',
        mean=[103.53, 116.28, 123.675],
        std=[57.375, 57.12, 58.395],
        bgr_to_rgb=False,
        batch_augments=None),
    backbone=dict(
        type='CSPNeXt',
        arch='P5',
        expand_ratio=0.5,
        deepen_factor=0.167,
        widen_factor=0.375,
        channel_attention=True,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True),
        init_cfg=dict(
            type='Pretrained',
            prefix='backbone.',
            checkpoint=
            'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth'
        ),
        frozen_stages=4),
    neck=dict(
        type='CSPNeXtPAFPN',
        in_channels=[96, 192, 384],
        out_channels=96,
        num_csp_blocks=1,
        expand_ratio=0.5,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    bbox_head=dict(
        type='RTMDetSepBNHead',
        num_classes=10,
        in_channels=96,
        stacked_convs=2,
        feat_channels=96,
        anchor_generator=dict(
            type='MlvlPointGenerator', offset=0, strides=[8, 16, 32]),
        bbox_coder=dict(type='DistancePointBBoxCoder'),
        loss_cls=dict(
            type='QualityFocalLoss',
            use_sigmoid=True,
            beta=2.0,
            loss_weight=1.0),
        loss_bbox=dict(type='GIoULoss', loss_weight=2.0),
        with_objectness=False,
        exp_on_reg=False,
        share_conv=True,
        pred_kernel_size=1,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    train_cfg=dict(
        assigner=dict(type='DynamicSoftLabelAssigner', topk=13),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    test_cfg=dict(
        nms_pre=30000,
        min_bbox_size=0,
        score_thr=0.001,
        nms=dict(type='nms', iou_threshold=0.65),
        max_per_img=300))
train_pipeline_stage2 = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='RandomResize',
        scale=(640, 640),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(type='PackDetInputs')
]
max_epochs = 40
stage2_num_epochs = 20
base_lr = 0.0001875
interval = 10
custom_hooks = [
    dict(
        type='EMAHook',
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        update_buffers=True,
        priority=49),
    dict(
        type='PipelineSwitchHook',
        switch_epoch=35,
        switch_pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='RandomResize',
                scale=(640, 640),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='PackDetInputs')
        ])
]
checkpoint = 'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth'
metainfo = dict(
    classes=('cola', 'pepsi', 'sprite', 'fanta', 'spring', 'ice', 'scream',
             'milk', 'red', 'king'),
    palette=[(101, 205, 228), (240, 128, 128), (154, 205, 50), (34, 139, 34),
             (139, 0, 0), (255, 165, 0), (255, 0, 255), (255, 255, 0),
             (29, 123, 243), (0, 255, 255)])
num_classes = 10
train_batch_size_per_gpu = 12
train_num_workers = 4
val_batch_size_per_gpu = 1
val_num_workers = 2
num_epochs_stage2 = 5
launcher = 'none'
work_dir = './work_dirs/rtmdet_tiny_1xb12-40e_drinks'

2023/06/10 14:18:28 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/10 14:18:28 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - WARNING - bbox_head.cls_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - WARNING - bbox_head.cls_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - WARNING - bbox_head.cls_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - WARNING - bbox_head.cls_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - WARNING - bbox_head.reg_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - WARNING - bbox_head.reg_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - WARNING - bbox_head.reg_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - WARNING - bbox_head.reg_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.weight:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.0.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.1.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.2.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.0.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.1.bias:weight_decay=0.0
2023/06/10 14:18:29 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.2.bias:weight_decay=0.0
2023/06/10 14:18:30 - mmengine - INFO - load backbone. in model from: https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth
Name of parameter - Initialization information

backbone.stem.0.conv.weight - torch.Size([12, 3, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.0.bn.weight - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.0.bn.bias - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.conv.weight - torch.Size([12, 12, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.bn.weight - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.bn.bias - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.conv.weight - torch.Size([24, 12, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.conv.weight - torch.Size([48, 24, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.conv.weight - torch.Size([24, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.conv.weight - torch.Size([24, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.conv.weight - torch.Size([24, 24, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([24, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([24, 24, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.attention.fc.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.attention.fc.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.conv.weight - torch.Size([96, 48, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.conv.weight - torch.Size([48, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.conv.weight - torch.Size([48, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.conv.weight - torch.Size([48, 48, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([48, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.attention.fc.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.attention.fc.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.conv.weight - torch.Size([192, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.attention.fc.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.attention.fc.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.conv.weight - torch.Size([384, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.conv.weight - torch.Size([384, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.conv.weight - torch.Size([384, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.conv.weight - torch.Size([192, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.attention.fc.weight - torch.Size([384, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.attention.fc.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

neck.reduce_layers.0.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.0.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.0.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.conv.weight - torch.Size([96, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.main_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.conv.weight - torch.Size([96, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.short_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.final_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.main_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.short_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.final_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.conv.weight - torch.Size([48, 48, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([48, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.conv.weight - torch.Size([192, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.main_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.short_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.final_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.main_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.short_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.conv.weight - torch.Size([384, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.final_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.conv.weight - torch.Size([192, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.conv.weight - torch.Size([96, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.conv.weight - torch.Size([96, 384, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.2.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.rtm_cls.0.weight - torch.Size([10, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.0.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.weight - torch.Size([10, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.weight - torch.Size([10, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  
2023/06/10 14:18:31 - mmengine - INFO - Load checkpoint from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_tiny_8xb32-300e_coco/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth
2023/06/10 14:18:31 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/10 14:18:31 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/10 14:18:31 - mmengine - INFO - Checkpoints will be saved to /home/cine/Documents/GitHub/mmdet/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_drinks.
2023/06/10 14:19:56 - mmengine - INFO - Epoch(train)  [1][ 5/19]  lr: 2.5864e-05  eta: 3:35:08  time: 17.0972  data_time: 13.8404  memory: 1563  loss: 2.6708  loss_cls: 1.9588  loss_bbox: 0.7120
2023/06/10 14:20:08 - mmengine - INFO - Epoch(train)  [1][10/19]  lr: 5.8191e-05  eta: 2:01:57  time: 9.7561  data_time: 7.9396  memory: 1558  loss: 2.6898  loss_cls: 1.9888  loss_bbox: 0.7010
2023/06/10 14:20:21 - mmengine - INFO - Epoch(train)  [1][15/19]  lr: 9.0518e-05  eta: 1:31:29  time: 7.3685  data_time: 6.0353  memory: 1572  loss: 2.7051  loss_cls: 2.0135  loss_bbox: 0.6916
2023/06/10 14:20:26 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:20:44 - mmengine - INFO - Epoch(train)  [2][ 5/19]  lr: 1.4871e-04  eta: 1:08:20  time: 5.5719  data_time: 4.6385  memory: 1583  loss: 2.7563  loss_cls: 2.0970  loss_bbox: 0.6593
2023/06/10 14:20:53 - mmengine - INFO - Epoch(train)  [2][10/19]  lr: 1.8103e-04  eta: 0:59:40  time: 4.8978  data_time: 4.0744  memory: 1578  loss: 2.7742  loss_cls: 2.1313  loss_bbox: 0.6429
2023/06/10 14:21:00 - mmengine - INFO - Epoch(train)  [2][15/19]  lr: 1.8750e-04  eta: 0:53:11  time: 4.3956  data_time: 3.6560  memory: 1563  loss: 2.7922  loss_cls: 2.1713  loss_bbox: 0.6209
2023/06/10 14:21:05 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:21:28 - mmengine - INFO - Epoch(train)  [3][ 5/19]  lr: 1.8750e-04  eta: 0:49:13  time: 4.1191  data_time: 3.4798  memory: 1578  loss: 2.7816  loss_cls: 2.1960  loss_bbox: 0.5856
2023/06/10 14:21:34 - mmengine - INFO - Epoch(train)  [3][10/19]  lr: 1.8750e-04  eta: 0:45:21  time: 3.8221  data_time: 3.2264  memory: 1570  loss: 2.7435  loss_cls: 2.1782  loss_bbox: 0.5653
2023/06/10 14:21:42 - mmengine - INFO - Epoch(train)  [3][15/19]  lr: 1.8750e-04  eta: 0:42:35  time: 2.9557  data_time: 2.4306  memory: 1591  loss: 2.6860  loss_cls: 2.1507  loss_bbox: 0.5352
2023/06/10 14:21:46 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:21:58 - mmengine - INFO - Epoch(train)  [4][ 5/19]  lr: 1.8750e-04  eta: 0:38:58  time: 2.1039  data_time: 1.8492  memory: 1572  loss: 2.5388  loss_cls: 2.0710  loss_bbox: 0.4678
2023/06/10 14:22:07 - mmengine - INFO - Epoch(train)  [4][10/19]  lr: 1.8750e-04  eta: 0:37:15  time: 2.0537  data_time: 1.8015  memory: 1571  loss: 2.4227  loss_cls: 1.9891  loss_bbox: 0.4337
2023/06/10 14:22:15 - mmengine - INFO - Epoch(train)  [4][15/19]  lr: 1.8750e-04  eta: 0:35:42  time: 2.0032  data_time: 1.7557  memory: 1573  loss: 2.2940  loss_cls: 1.8888  loss_bbox: 0.4053
2023/06/10 14:22:18 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:22:31 - mmengine - INFO - Epoch(train)  [5][ 5/19]  lr: 1.8750e-04  eta: 0:33:37  time: 1.9563  data_time: 1.7240  memory: 1562  loss: 2.0343  loss_cls: 1.6731  loss_bbox: 0.3612
2023/06/10 14:22:38 - mmengine - INFO - Epoch(train)  [5][10/19]  lr: 1.8750e-04  eta: 0:32:15  time: 1.8526  data_time: 1.6212  memory: 1578  loss: 1.8868  loss_cls: 1.5441  loss_bbox: 0.3427
2023/06/10 14:22:45 - mmengine - INFO - Epoch(train)  [5][15/19]  lr: 1.8750e-04  eta: 0:31:08  time: 1.7132  data_time: 1.4834  memory: 1571  loss: 1.7410  loss_cls: 1.4160  loss_bbox: 0.3250
2023/06/10 14:22:50 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:22:50 - mmengine - INFO - Saving checkpoint at 5 epochs
2023/06/10 14:22:52 - mmengine - INFO - Epoch(val)  [5][ 5/56]    eta: 0:00:08  time: 0.1647  data_time: 0.1335  memory: 1587  
2023/06/10 14:22:52 - mmengine - INFO - Epoch(val)  [5][10/56]    eta: 0:00:05  time: 0.1191  data_time: 0.0899  memory: 105  
2023/06/10 14:22:53 - mmengine - INFO - Epoch(val)  [5][15/56]    eta: 0:00:04  time: 0.1136  data_time: 0.0859  memory: 105  
2023/06/10 14:22:53 - mmengine - INFO - Epoch(val)  [5][20/56]    eta: 0:00:03  time: 0.1033  data_time: 0.0762  memory: 105  
2023/06/10 14:22:54 - mmengine - INFO - Epoch(val)  [5][25/56]    eta: 0:00:03  time: 0.0971  data_time: 0.0701  memory: 105  
2023/06/10 14:22:54 - mmengine - INFO - Epoch(val)  [5][30/56]    eta: 0:00:02  time: 0.0989  data_time: 0.0719  memory: 105  
2023/06/10 14:22:55 - mmengine - INFO - Epoch(val)  [5][35/56]    eta: 0:00:01  time: 0.0925  data_time: 0.0657  memory: 105  
2023/06/10 14:22:55 - mmengine - INFO - Epoch(val)  [5][40/56]    eta: 0:00:01  time: 0.0922  data_time: 0.0654  memory: 105  
2023/06/10 14:22:55 - mmengine - INFO - Epoch(val)  [5][45/56]    eta: 0:00:00  time: 0.0879  data_time: 0.0610  memory: 105  
2023/06/10 14:22:56 - mmengine - INFO - Epoch(val)  [5][50/56]    eta: 0:00:00  time: 0.0890  data_time: 0.0619  memory: 105  
2023/06/10 14:22:56 - mmengine - INFO - Epoch(val)  [5][55/56]    eta: 0:00:00  time: 0.0800  data_time: 0.0532  memory: 105  
2023/06/10 14:22:56 - mmengine - INFO - Evaluating bbox...
2023/06/10 14:22:57 - mmengine - INFO - bbox_mAP_copypaste: 0.300 0.361 0.355 -1.000 -1.000 0.300
2023/06/10 14:22:57 - mmengine - INFO - Epoch(val) [5][56/56]  coco/bbox_mAP: 0.3000  coco/bbox_mAP_50: 0.3610  coco/bbox_mAP_75: 0.3550  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.3000  data_time: 0.0555  time: 0.0823
2023/06/10 14:22:58 - mmengine - INFO - The best checkpoint with 0.3000 coco/bbox_mAP at 5 epoch is saved to best_coco/bbox_mAP_epoch_5.pth.
2023/06/10 14:23:16 - mmengine - INFO - Epoch(train)  [6][ 5/19]  lr: 1.8750e-04  eta: 0:30:28  time: 1.8620  data_time: 1.6292  memory: 1580  loss: 1.5370  loss_cls: 1.2351  loss_bbox: 0.3019
2023/06/10 14:23:24 - mmengine - INFO - Epoch(train)  [6][10/19]  lr: 1.8750e-04  eta: 0:29:40  time: 1.8109  data_time: 1.5690  memory: 1572  loss: 1.4529  loss_cls: 1.1586  loss_bbox: 0.2943
2023/06/10 14:23:31 - mmengine - INFO - Epoch(train)  [6][15/19]  lr: 1.8750e-04  eta: 0:28:43  time: 1.7514  data_time: 1.5154  memory: 1571  loss: 1.3848  loss_cls: 1.0966  loss_bbox: 0.2882
2023/06/10 14:23:35 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:23:49 - mmengine - INFO - Epoch(train)  [7][ 5/19]  lr: 1.8750e-04  eta: 0:27:51  time: 1.8727  data_time: 1.6376  memory: 1573  loss: 1.2950  loss_cls: 1.0185  loss_bbox: 0.2766
2023/06/10 14:23:57 - mmengine - INFO - Epoch(train)  [7][10/19]  lr: 1.8750e-04  eta: 0:27:11  time: 1.8651  data_time: 1.6248  memory: 1585  loss: 1.2481  loss_cls: 0.9797  loss_bbox: 0.2684
2023/06/10 14:24:01 - mmengine - INFO - Epoch(train)  [7][15/19]  lr: 1.8750e-04  eta: 0:26:17  time: 1.7461  data_time: 1.5062  memory: 1584  loss: 1.2094  loss_cls: 0.9488  loss_bbox: 0.2606
2023/06/10 14:24:07 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:24:18 - mmengine - INFO - Epoch(train)  [8][ 5/19]  lr: 1.8750e-04  eta: 0:25:29  time: 1.8363  data_time: 1.5934  memory: 1587  loss: 1.1675  loss_cls: 0.9139  loss_bbox: 0.2536
2023/06/10 14:24:30 - mmengine - INFO - Epoch(train)  [8][10/19]  lr: 1.8750e-04  eta: 0:25:14  time: 1.8483  data_time: 1.6015  memory: 1569  loss: 1.1417  loss_cls: 0.8914  loss_bbox: 0.2502
2023/06/10 14:24:36 - mmengine - INFO - Epoch(train)  [8][15/19]  lr: 1.8750e-04  eta: 0:24:36  time: 1.7476  data_time: 1.5031  memory: 1590  loss: 1.1214  loss_cls: 0.8710  loss_bbox: 0.2504
2023/06/10 14:24:40 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:24:52 - mmengine - INFO - Epoch(train)  [9][ 5/19]  lr: 1.8750e-04  eta: 0:23:53  time: 1.7460  data_time: 1.5146  memory: 1589  loss: 1.0731  loss_cls: 0.8325  loss_bbox: 0.2406
2023/06/10 14:25:00 - mmengine - INFO - Epoch(train)  [9][10/19]  lr: 1.8750e-04  eta: 0:23:25  time: 1.6978  data_time: 1.4661  memory: 1573  loss: 1.0597  loss_cls: 0.8190  loss_bbox: 0.2407
2023/06/10 14:25:06 - mmengine - INFO - Epoch(train)  [9][15/19]  lr: 1.8750e-04  eta: 0:22:55  time: 1.6874  data_time: 1.4559  memory: 1566  loss: 1.0384  loss_cls: 0.8013  loss_bbox: 0.2371
2023/06/10 14:25:12 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:25:23 - mmengine - INFO - Epoch(train) [10][ 5/19]  lr: 1.8750e-04  eta: 0:22:19  time: 1.7015  data_time: 1.4773  memory: 1579  loss: 1.0077  loss_cls: 0.7738  loss_bbox: 0.2339
2023/06/10 14:25:29 - mmengine - INFO - Epoch(train) [10][10/19]  lr: 1.8750e-04  eta: 0:21:52  time: 1.6443  data_time: 1.4172  memory: 1561  loss: 0.9928  loss_cls: 0.7614  loss_bbox: 0.2315
2023/06/10 14:25:42 - mmengine - INFO - Epoch(train) [10][15/19]  lr: 1.8750e-04  eta: 0:21:46  time: 1.7233  data_time: 1.4934  memory: 1586  loss: 0.9682  loss_cls: 0.7412  loss_bbox: 0.2270
2023/06/10 14:25:46 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:25:46 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/06/10 14:25:48 - mmengine - INFO - Epoch(val) [10][ 5/56]    eta: 0:00:05  time: 0.0840  data_time: 0.0569  memory: 1555  
2023/06/10 14:25:48 - mmengine - INFO - Epoch(val) [10][10/56]    eta: 0:00:03  time: 0.0808  data_time: 0.0537  memory: 105  
2023/06/10 14:25:49 - mmengine - INFO - Epoch(val) [10][15/56]    eta: 0:00:03  time: 0.0810  data_time: 0.0541  memory: 105  
2023/06/10 14:25:49 - mmengine - INFO - Epoch(val) [10][20/56]    eta: 0:00:02  time: 0.0774  data_time: 0.0507  memory: 105  
2023/06/10 14:25:49 - mmengine - INFO - Epoch(val) [10][25/56]    eta: 0:00:02  time: 0.0756  data_time: 0.0488  memory: 105  
2023/06/10 14:25:50 - mmengine - INFO - Epoch(val) [10][30/56]    eta: 0:00:01  time: 0.0755  data_time: 0.0488  memory: 105  
2023/06/10 14:25:50 - mmengine - INFO - Epoch(val) [10][35/56]    eta: 0:00:01  time: 0.0747  data_time: 0.0480  memory: 105  
2023/06/10 14:25:50 - mmengine - INFO - Epoch(val) [10][40/56]    eta: 0:00:01  time: 0.0733  data_time: 0.0469  memory: 105  
2023/06/10 14:25:50 - mmengine - INFO - Epoch(val) [10][45/56]    eta: 0:00:00  time: 0.0712  data_time: 0.0453  memory: 105  
2023/06/10 14:25:51 - mmengine - INFO - Epoch(val) [10][50/56]    eta: 0:00:00  time: 0.0697  data_time: 0.0439  memory: 105  
2023/06/10 14:25:51 - mmengine - INFO - Epoch(val) [10][55/56]    eta: 0:00:00  time: 0.0660  data_time: 0.0404  memory: 105  
2023/06/10 14:25:51 - mmengine - INFO - Evaluating bbox...
2023/06/10 14:25:52 - mmengine - INFO - bbox_mAP_copypaste: 0.657 0.737 0.732 -1.000 -1.000 0.657
2023/06/10 14:25:52 - mmengine - INFO - Epoch(val) [10][56/56]  coco/bbox_mAP: 0.6570  coco/bbox_mAP_50: 0.7370  coco/bbox_mAP_75: 0.7320  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6570  data_time: 0.0421  time: 0.0677
2023/06/10 14:25:52 - mmengine - INFO - The previous best checkpoint /home/cine/Documents/GitHub/mmdet/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_drinks/best_coco/bbox_mAP_epoch_5.pth is removed
2023/06/10 14:25:53 - mmengine - INFO - The best checkpoint with 0.6570 coco/bbox_mAP at 10 epoch is saved to best_coco/bbox_mAP_epoch_10.pth.
2023/06/10 14:26:11 - mmengine - INFO - Epoch(train) [11][ 5/19]  lr: 1.8750e-04  eta: 0:21:27  time: 1.8572  data_time: 1.6267  memory: 1564  loss: 0.9316  loss_cls: 0.7093  loss_bbox: 0.2224
2023/06/10 14:26:18 - mmengine - INFO - Epoch(train) [11][10/19]  lr: 1.8750e-04  eta: 0:21:05  time: 1.8670  data_time: 1.6322  memory: 1586  loss: 0.9146  loss_cls: 0.6945  loss_bbox: 0.2201
2023/06/10 14:26:27 - mmengine - INFO - Epoch(train) [11][15/19]  lr: 1.8750e-04  eta: 0:20:48  time: 1.8542  data_time: 1.6133  memory: 1572  loss: 0.8974  loss_cls: 0.6784  loss_bbox: 0.2190
2023/06/10 14:26:31 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:26:46 - mmengine - INFO - Epoch(train) [12][ 5/19]  lr: 1.8750e-04  eta: 0:20:24  time: 1.9775  data_time: 1.7322  memory: 1569  loss: 0.8679  loss_cls: 0.6535  loss_bbox: 0.2144
2023/06/10 14:26:53 - mmengine - INFO - Epoch(train) [12][10/19]  lr: 1.8750e-04  eta: 0:20:03  time: 1.9090  data_time: 1.6558  memory: 1580  loss: 0.8560  loss_cls: 0.6436  loss_bbox: 0.2124
2023/06/10 14:26:59 - mmengine - INFO - Epoch(train) [12][15/19]  lr: 1.8750e-04  eta: 0:19:39  time: 1.8363  data_time: 1.5799  memory: 1571  loss: 0.8411  loss_cls: 0.6309  loss_bbox: 0.2102
2023/06/10 14:27:04 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:27:17 - mmengine - INFO - Epoch(train) [13][ 5/19]  lr: 1.8750e-04  eta: 0:19:15  time: 1.8757  data_time: 1.6259  memory: 1555  loss: 0.8146  loss_cls: 0.6086  loss_bbox: 0.2060
2023/06/10 14:27:24 - mmengine - INFO - Epoch(train) [13][10/19]  lr: 1.8750e-04  eta: 0:18:56  time: 1.8643  data_time: 1.6114  memory: 1604  loss: 0.8056  loss_cls: 0.6001  loss_bbox: 0.2054
2023/06/10 14:27:31 - mmengine - INFO - Epoch(train) [13][15/19]  lr: 1.8750e-04  eta: 0:18:37  time: 1.8062  data_time: 1.5582  memory: 1582  loss: 0.7917  loss_cls: 0.5874  loss_bbox: 0.2044
2023/06/10 14:27:36 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:27:48 - mmengine - INFO - Epoch(train) [14][ 5/19]  lr: 1.8750e-04  eta: 0:18:12  time: 1.7226  data_time: 1.4889  memory: 1576  loss: 0.7762  loss_cls: 0.5738  loss_bbox: 0.2024
2023/06/10 14:27:57 - mmengine - INFO - Epoch(train) [14][10/19]  lr: 1.8750e-04  eta: 0:17:58  time: 1.7613  data_time: 1.5270  memory: 1558  loss: 0.7633  loss_cls: 0.5624  loss_bbox: 0.2009
2023/06/10 14:28:04 - mmengine - INFO - Epoch(train) [14][15/19]  lr: 1.8750e-04  eta: 0:17:39  time: 1.6844  data_time: 1.4520  memory: 1574  loss: 0.7588  loss_cls: 0.5571  loss_bbox: 0.2016
2023/06/10 14:28:08 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:28:20 - mmengine - INFO - Epoch(train) [15][ 5/19]  lr: 1.8750e-04  eta: 0:17:15  time: 1.7243  data_time: 1.5034  memory: 1585  loss: 0.7478  loss_cls: 0.5448  loss_bbox: 0.2030
2023/06/10 14:28:27 - mmengine - INFO - Epoch(train) [15][10/19]  lr: 1.8750e-04  eta: 0:16:58  time: 1.6626  data_time: 1.4378  memory: 1585  loss: 0.7384  loss_cls: 0.5345  loss_bbox: 0.2039
2023/06/10 14:28:37 - mmengine - INFO - Epoch(train) [15][15/19]  lr: 1.8750e-04  eta: 0:16:46  time: 1.7008  data_time: 1.4643  memory: 1590  loss: 0.7348  loss_cls: 0.5298  loss_bbox: 0.2051
2023/06/10 14:28:41 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:28:41 - mmengine - INFO - Saving checkpoint at 15 epochs
2023/06/10 14:28:43 - mmengine - INFO - Epoch(val) [15][ 5/56]    eta: 0:00:05  time: 0.0707  data_time: 0.0448  memory: 1586  
2023/06/10 14:28:43 - mmengine - INFO - Epoch(val) [15][10/56]    eta: 0:00:03  time: 0.0702  data_time: 0.0442  memory: 105  
2023/06/10 14:28:43 - mmengine - INFO - Epoch(val) [15][15/56]    eta: 0:00:03  time: 0.0717  data_time: 0.0455  memory: 105  
2023/06/10 14:28:44 - mmengine - INFO - Epoch(val) [15][20/56]    eta: 0:00:02  time: 0.0697  data_time: 0.0433  memory: 105  
2023/06/10 14:28:44 - mmengine - INFO - Epoch(val) [15][25/56]    eta: 0:00:02  time: 0.0697  data_time: 0.0432  memory: 105  
2023/06/10 14:28:44 - mmengine - INFO - Epoch(val) [15][30/56]    eta: 0:00:01  time: 0.0712  data_time: 0.0448  memory: 105  
2023/06/10 14:28:45 - mmengine - INFO - Epoch(val) [15][35/56]    eta: 0:00:01  time: 0.0715  data_time: 0.0448  memory: 105  
2023/06/10 14:28:45 - mmengine - INFO - Epoch(val) [15][40/56]    eta: 0:00:01  time: 0.0716  data_time: 0.0450  memory: 105  
2023/06/10 14:28:45 - mmengine - INFO - Epoch(val) [15][45/56]    eta: 0:00:00  time: 0.0700  data_time: 0.0434  memory: 105  
2023/06/10 14:28:46 - mmengine - INFO - Epoch(val) [15][50/56]    eta: 0:00:00  time: 0.0707  data_time: 0.0442  memory: 105  
2023/06/10 14:28:46 - mmengine - INFO - Epoch(val) [15][55/56]    eta: 0:00:00  time: 0.0672  data_time: 0.0408  memory: 105  
2023/06/10 14:28:46 - mmengine - INFO - Evaluating bbox...
2023/06/10 14:28:47 - mmengine - INFO - bbox_mAP_copypaste: 0.879 0.964 0.957 -1.000 -1.000 0.879
2023/06/10 14:28:47 - mmengine - INFO - Epoch(val) [15][56/56]  coco/bbox_mAP: 0.8790  coco/bbox_mAP_50: 0.9640  coco/bbox_mAP_75: 0.9570  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.8790  data_time: 0.0426  time: 0.0691
2023/06/10 14:28:47 - mmengine - INFO - The previous best checkpoint /home/cine/Documents/GitHub/mmdet/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_drinks/best_coco/bbox_mAP_epoch_10.pth is removed
2023/06/10 14:28:48 - mmengine - INFO - The best checkpoint with 0.8790 coco/bbox_mAP at 15 epoch is saved to best_coco/bbox_mAP_epoch_15.pth.
2023/06/10 14:29:02 - mmengine - INFO - Epoch(train) [16][ 5/19]  lr: 1.8750e-04  eta: 0:16:26  time: 1.8038  data_time: 1.5731  memory: 1565  loss: 0.7168  loss_cls: 0.5140  loss_bbox: 0.2029
2023/06/10 14:29:10 - mmengine - INFO - Epoch(train) [16][10/19]  lr: 1.8750e-04  eta: 0:16:11  time: 1.7864  data_time: 1.5495  memory: 1588  loss: 0.7127  loss_cls: 0.5097  loss_bbox: 0.2030
2023/06/10 14:29:18 - mmengine - INFO - Epoch(train) [16][15/19]  lr: 1.8750e-04  eta: 0:15:57  time: 1.7254  data_time: 1.4813  memory: 1585  loss: 0.7019  loss_cls: 0.5007  loss_bbox: 0.2012
2023/06/10 14:29:23 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:29:37 - mmengine - INFO - Epoch(train) [17][ 5/19]  lr: 1.8750e-04  eta: 0:15:39  time: 1.8477  data_time: 1.5996  memory: 1585  loss: 0.6821  loss_cls: 0.4832  loss_bbox: 0.1988
2023/06/10 14:29:44 - mmengine - INFO - Epoch(train) [17][10/19]  lr: 1.8750e-04  eta: 0:15:23  time: 1.7764  data_time: 1.5261  memory: 1567  loss: 0.6740  loss_cls: 0.4758  loss_bbox: 0.1982
2023/06/10 14:29:51 - mmengine - INFO - Epoch(train) [17][15/19]  lr: 1.8750e-04  eta: 0:15:08  time: 1.7473  data_time: 1.4958  memory: 1556  loss: 0.6596  loss_cls: 0.4651  loss_bbox: 0.1945
2023/06/10 14:29:56 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:30:09 - mmengine - INFO - Epoch(train) [18][ 5/19]  lr: 1.8750e-04  eta: 0:14:50  time: 1.8317  data_time: 1.5925  memory: 1586  loss: 0.6490  loss_cls: 0.4564  loss_bbox: 0.1926
2023/06/10 14:30:17 - mmengine - INFO - Epoch(train) [18][10/19]  lr: 1.8750e-04  eta: 0:14:36  time: 1.8435  data_time: 1.6066  memory: 1589  loss: 0.6335  loss_cls: 0.4428  loss_bbox: 0.1907
2023/06/10 14:30:24 - mmengine - INFO - Epoch(train) [18][15/19]  lr: 1.8750e-04  eta: 0:14:22  time: 1.7644  data_time: 1.5234  memory: 1579  loss: 0.6345  loss_cls: 0.4430  loss_bbox: 0.1915
2023/06/10 14:30:28 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:30:43 - mmengine - INFO - Epoch(train) [19][ 5/19]  lr: 1.8750e-04  eta: 0:14:04  time: 1.8296  data_time: 1.5995  memory: 1568  loss: 0.6167  loss_cls: 0.4276  loss_bbox: 0.1890
2023/06/10 14:30:50 - mmengine - INFO - Epoch(train) [19][10/19]  lr: 1.8750e-04  eta: 0:13:49  time: 1.7611  data_time: 1.5342  memory: 1557  loss: 0.6086  loss_cls: 0.4212  loss_bbox: 0.1875
2023/06/10 14:30:55 - mmengine - INFO - Epoch(train) [19][15/19]  lr: 1.8750e-04  eta: 0:13:33  time: 1.6610  data_time: 1.4382  memory: 1579  loss: 0.6058  loss_cls: 0.4184  loss_bbox: 0.1874
2023/06/10 14:31:00 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:31:10 - mmengine - INFO - Epoch(train) [20][ 5/19]  lr: 1.8750e-04  eta: 0:13:13  time: 1.6883  data_time: 1.4690  memory: 1583  loss: 0.5981  loss_cls: 0.4117  loss_bbox: 0.1864
2023/06/10 14:31:17 - mmengine - INFO - Epoch(train) [20][10/19]  lr: 1.8750e-04  eta: 0:12:59  time: 1.6385  data_time: 1.4146  memory: 1580  loss: 0.5889  loss_cls: 0.4037  loss_bbox: 0.1852
2023/06/10 14:31:27 - mmengine - INFO - Epoch(train) [20][15/19]  lr: 1.8750e-04  eta: 0:12:49  time: 1.6764  data_time: 1.4519  memory: 1592  loss: 0.5794  loss_cls: 0.3954  loss_bbox: 0.1839
2023/06/10 14:31:31 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:31:31 - mmengine - INFO - Saving checkpoint at 20 epochs
2023/06/10 14:31:33 - mmengine - INFO - Epoch(val) [20][ 5/56]    eta: 0:00:05  time: 0.0726  data_time: 0.0454  memory: 1575  
2023/06/10 14:31:33 - mmengine - INFO - Epoch(val) [20][10/56]    eta: 0:00:03  time: 0.0715  data_time: 0.0446  memory: 105  
2023/06/10 14:31:34 - mmengine - INFO - Epoch(val) [20][15/56]    eta: 0:00:03  time: 0.0730  data_time: 0.0463  memory: 105  
2023/06/10 14:31:34 - mmengine - INFO - Epoch(val) [20][20/56]    eta: 0:00:02  time: 0.0700  data_time: 0.0435  memory: 105  
2023/06/10 14:31:34 - mmengine - INFO - Epoch(val) [20][25/56]    eta: 0:00:02  time: 0.0702  data_time: 0.0437  memory: 105  
2023/06/10 14:31:35 - mmengine - INFO - Epoch(val) [20][30/56]    eta: 0:00:01  time: 0.0710  data_time: 0.0448  memory: 105  
2023/06/10 14:31:35 - mmengine - INFO - Epoch(val) [20][35/56]    eta: 0:00:01  time: 0.0713  data_time: 0.0451  memory: 105  
2023/06/10 14:31:35 - mmengine - INFO - Epoch(val) [20][40/56]    eta: 0:00:01  time: 0.0711  data_time: 0.0449  memory: 105  
2023/06/10 14:31:36 - mmengine - INFO - Epoch(val) [20][45/56]    eta: 0:00:00  time: 0.0696  data_time: 0.0437  memory: 105  
2023/06/10 14:31:36 - mmengine - INFO - Epoch(val) [20][50/56]    eta: 0:00:00  time: 0.0694  data_time: 0.0432  memory: 105  
2023/06/10 14:31:36 - mmengine - INFO - Epoch(val) [20][55/56]    eta: 0:00:00  time: 0.0652  data_time: 0.0396  memory: 105  
2023/06/10 14:31:37 - mmengine - INFO - Evaluating bbox...
2023/06/10 14:31:37 - mmengine - INFO - bbox_mAP_copypaste: 0.926 0.982 0.982 -1.000 -1.000 0.926
2023/06/10 14:31:37 - mmengine - INFO - Epoch(val) [20][56/56]  coco/bbox_mAP: 0.9260  coco/bbox_mAP_50: 0.9820  coco/bbox_mAP_75: 0.9820  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9260  data_time: 0.0415  time: 0.0671
2023/06/10 14:31:37 - mmengine - INFO - The previous best checkpoint /home/cine/Documents/GitHub/mmdet/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_drinks/best_coco/bbox_mAP_epoch_15.pth is removed
2023/06/10 14:31:38 - mmengine - INFO - The best checkpoint with 0.9260 coco/bbox_mAP at 20 epoch is saved to best_coco/bbox_mAP_epoch_20.pth.
2023/06/10 14:31:50 - mmengine - INFO - Epoch(train) [21][ 5/19]  lr: 1.8745e-04  eta: 0:12:29  time: 1.7141  data_time: 1.4950  memory: 1566  loss: 0.5693  loss_cls: 0.3878  loss_bbox: 0.1815
2023/06/10 14:31:57 - mmengine - INFO - Epoch(train) [21][10/19]  lr: 1.8725e-04  eta: 0:12:16  time: 1.6452  data_time: 1.4287  memory: 1585  loss: 0.5586  loss_cls: 0.3790  loss_bbox: 0.1795
2023/06/10 14:32:02 - mmengine - INFO - Epoch(train) [21][15/19]  lr: 1.8690e-04  eta: 0:12:02  time: 1.5844  data_time: 1.3664  memory: 1605  loss: 0.5541  loss_cls: 0.3761  loss_bbox: 0.1779
2023/06/10 14:32:07 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:32:18 - mmengine - INFO - Epoch(train) [22][ 5/19]  lr: 1.8589e-04  eta: 0:11:42  time: 1.6220  data_time: 1.4098  memory: 1582  loss: 0.5538  loss_cls: 0.3739  loss_bbox: 0.1799
2023/06/10 14:32:25 - mmengine - INFO - Epoch(train) [22][10/19]  lr: 1.8512e-04  eta: 0:11:30  time: 1.5744  data_time: 1.3604  memory: 1581  loss: 0.5421  loss_cls: 0.3644  loss_bbox: 0.1777
2023/06/10 14:32:30 - mmengine - INFO - Epoch(train) [22][15/19]  lr: 1.8421e-04  eta: 0:11:16  time: 1.5054  data_time: 1.2927  memory: 1559  loss: 0.5372  loss_cls: 0.3599  loss_bbox: 0.1773
2023/06/10 14:32:36 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:32:48 - mmengine - INFO - Epoch(train) [23][ 5/19]  lr: 1.8218e-04  eta: 0:10:59  time: 1.6205  data_time: 1.4134  memory: 1587  loss: 0.5356  loss_cls: 0.3572  loss_bbox: 0.1784
2023/06/10 14:32:55 - mmengine - INFO - Epoch(train) [23][10/19]  lr: 1.8086e-04  eta: 0:10:47  time: 1.6159  data_time: 1.4053  memory: 1582  loss: 0.5295  loss_cls: 0.3518  loss_bbox: 0.1777
2023/06/10 14:33:00 - mmengine - INFO - Epoch(train) [23][15/19]  lr: 1.7940e-04  eta: 0:10:33  time: 1.4876  data_time: 1.2770  memory: 1569  loss: 0.5302  loss_cls: 0.3517  loss_bbox: 0.1785
2023/06/10 14:33:03 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:33:14 - mmengine - INFO - Epoch(train) [24][ 5/19]  lr: 1.7641e-04  eta: 0:10:13  time: 1.5303  data_time: 1.3229  memory: 1579  loss: 0.5177  loss_cls: 0.3432  loss_bbox: 0.1745
2023/06/10 14:33:21 - mmengine - INFO - Epoch(train) [24][10/19]  lr: 1.7457e-04  eta: 0:10:02  time: 1.4916  data_time: 1.2811  memory: 1561  loss: 0.5148  loss_cls: 0.3404  loss_bbox: 0.1744
2023/06/10 14:33:27 - mmengine - INFO - Epoch(train) [24][15/19]  lr: 1.7259e-04  eta: 0:09:50  time: 1.4596  data_time: 1.2476  memory: 1563  loss: 0.5046  loss_cls: 0.3330  loss_bbox: 0.1716
2023/06/10 14:33:30 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:33:42 - mmengine - INFO - Epoch(train) [25][ 5/19]  lr: 1.6872e-04  eta: 0:09:31  time: 1.5129  data_time: 1.3004  memory: 1580  loss: 0.5065  loss_cls: 0.3351  loss_bbox: 0.1714
2023/06/10 14:33:47 - mmengine - INFO - Epoch(train) [25][10/19]  lr: 1.6640e-04  eta: 0:09:19  time: 1.4620  data_time: 1.2464  memory: 1572  loss: 0.5061  loss_cls: 0.3351  loss_bbox: 0.1710
2023/06/10 14:33:54 - mmengine - INFO - Epoch(train) [25][15/19]  lr: 1.6396e-04  eta: 0:09:08  time: 1.4101  data_time: 1.1935  memory: 1557  loss: 0.4992  loss_cls: 0.3310  loss_bbox: 0.1682
2023/06/10 14:34:00 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:34:00 - mmengine - INFO - Saving checkpoint at 25 epochs
2023/06/10 14:34:02 - mmengine - INFO - Epoch(val) [25][ 5/56]    eta: 0:00:05  time: 0.0699  data_time: 0.0438  memory: 1588  
2023/06/10 14:34:02 - mmengine - INFO - Epoch(val) [25][10/56]    eta: 0:00:03  time: 0.0692  data_time: 0.0431  memory: 105  
2023/06/10 14:34:02 - mmengine - INFO - Epoch(val) [25][15/56]    eta: 0:00:03  time: 0.0715  data_time: 0.0453  memory: 105  
2023/06/10 14:34:03 - mmengine - INFO - Epoch(val) [25][20/56]    eta: 0:00:02  time: 0.0698  data_time: 0.0432  memory: 105  
2023/06/10 14:34:03 - mmengine - INFO - Epoch(val) [25][25/56]    eta: 0:00:02  time: 0.0701  data_time: 0.0434  memory: 105  
2023/06/10 14:34:03 - mmengine - INFO - Epoch(val) [25][30/56]    eta: 0:00:01  time: 0.0720  data_time: 0.0451  memory: 105  
2023/06/10 14:34:04 - mmengine - INFO - Epoch(val) [25][35/56]    eta: 0:00:01  time: 0.0727  data_time: 0.0454  memory: 105  
2023/06/10 14:34:04 - mmengine - INFO - Epoch(val) [25][40/56]    eta: 0:00:01  time: 0.0731  data_time: 0.0458  memory: 105  
2023/06/10 14:34:04 - mmengine - INFO - Epoch(val) [25][45/56]    eta: 0:00:00  time: 0.0723  data_time: 0.0449  memory: 105  
2023/06/10 14:34:05 - mmengine - INFO - Epoch(val) [25][50/56]    eta: 0:00:00  time: 0.0734  data_time: 0.0458  memory: 105  
2023/06/10 14:34:05 - mmengine - INFO - Epoch(val) [25][55/56]    eta: 0:00:00  time: 0.0704  data_time: 0.0432  memory: 105  
2023/06/10 14:34:05 - mmengine - INFO - Evaluating bbox...
2023/06/10 14:34:06 - mmengine - INFO - bbox_mAP_copypaste: 0.942 0.989 0.989 -1.000 -1.000 0.942
2023/06/10 14:34:06 - mmengine - INFO - Epoch(val) [25][56/56]  coco/bbox_mAP: 0.9420  coco/bbox_mAP_50: 0.9890  coco/bbox_mAP_75: 0.9890  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9420  data_time: 0.0450  time: 0.0723
2023/06/10 14:34:06 - mmengine - INFO - The previous best checkpoint /home/cine/Documents/GitHub/mmdet/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_drinks/best_coco/bbox_mAP_epoch_20.pth is removed
2023/06/10 14:34:07 - mmengine - INFO - The best checkpoint with 0.9420 coco/bbox_mAP at 25 epoch is saved to best_coco/bbox_mAP_epoch_25.pth.
2023/06/10 14:34:19 - mmengine - INFO - Epoch(train) [26][ 5/19]  lr: 1.5930e-04  eta: 0:08:51  time: 1.5351  data_time: 1.3240  memory: 1583  loss: 0.4997  loss_cls: 0.3302  loss_bbox: 0.1695
2023/06/10 14:34:26 - mmengine - INFO - Epoch(train) [26][10/19]  lr: 1.5656e-04  eta: 0:08:40  time: 1.5037  data_time: 1.2902  memory: 1578  loss: 0.4958  loss_cls: 0.3263  loss_bbox: 0.1695
2023/06/10 14:34:32 - mmengine - INFO - Epoch(train) [26][15/19]  lr: 1.5372e-04  eta: 0:08:29  time: 1.4955  data_time: 1.2791  memory: 1562  loss: 0.5002  loss_cls: 0.3284  loss_bbox: 0.1718
2023/06/10 14:34:37 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:34:49 - mmengine - INFO - Epoch(train) [27][ 5/19]  lr: 1.4838e-04  eta: 0:08:12  time: 1.5829  data_time: 1.3684  memory: 1582  loss: 0.4914  loss_cls: 0.3201  loss_bbox: 0.1713
2023/06/10 14:34:57 - mmengine - INFO - Epoch(train) [27][10/19]  lr: 1.4529e-04  eta: 0:08:02  time: 1.6376  data_time: 1.4175  memory: 1585  loss: 0.4900  loss_cls: 0.3183  loss_bbox: 0.1717
2023/06/10 14:35:03 - mmengine - INFO - Epoch(train) [27][15/19]  lr: 1.4212e-04  eta: 0:07:51  time: 1.5688  data_time: 1.3427  memory: 1569  loss: 0.4883  loss_cls: 0.3163  loss_bbox: 0.1721
2023/06/10 14:35:08 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:35:22 - mmengine - INFO - Epoch(train) [28][ 5/19]  lr: 1.3623e-04  eta: 0:07:35  time: 1.7163  data_time: 1.4917  memory: 1588  loss: 0.4822  loss_cls: 0.3102  loss_bbox: 0.1720
2023/06/10 14:35:27 - mmengine - INFO - Epoch(train) [28][10/19]  lr: 1.3286e-04  eta: 0:07:23  time: 1.6152  data_time: 1.3863  memory: 1563  loss: 0.4842  loss_cls: 0.3099  loss_bbox: 0.1743
2023/06/10 14:35:35 - mmengine - INFO - Epoch(train) [28][15/19]  lr: 1.2944e-04  eta: 0:07:13  time: 1.6399  data_time: 1.4060  memory: 1582  loss: 0.4816  loss_cls: 0.3084  loss_bbox: 0.1731
2023/06/10 14:35:39 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:35:50 - mmengine - INFO - Epoch(train) [29][ 5/19]  lr: 1.2314e-04  eta: 0:06:55  time: 1.6684  data_time: 1.4373  memory: 1569  loss: 0.4687  loss_cls: 0.2998  loss_bbox: 0.1689
2023/06/10 14:35:56 - mmengine - INFO - Epoch(train) [29][10/19]  lr: 1.1959e-04  eta: 0:06:45  time: 1.6000  data_time: 1.3664  memory: 1583  loss: 0.4690  loss_cls: 0.2997  loss_bbox: 0.1693
2023/06/10 14:36:02 - mmengine - INFO - Epoch(train) [29][15/19]  lr: 1.1599e-04  eta: 0:06:34  time: 1.5618  data_time: 1.3271  memory: 1557  loss: 0.4700  loss_cls: 0.3016  loss_bbox: 0.1683
2023/06/10 14:36:06 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:36:17 - mmengine - INFO - Epoch(train) [30][ 5/19]  lr: 1.0945e-04  eta: 0:06:17  time: 1.5862  data_time: 1.3586  memory: 1586  loss: 0.4661  loss_cls: 0.2976  loss_bbox: 0.1684
2023/06/10 14:36:23 - mmengine - INFO - Epoch(train) [30][10/19]  lr: 1.0579e-04  eta: 0:06:07  time: 1.5073  data_time: 1.2813  memory: 1571  loss: 0.4639  loss_cls: 0.2967  loss_bbox: 0.1672
2023/06/10 14:36:30 - mmengine - INFO - Epoch(train) [30][15/19]  lr: 1.0212e-04  eta: 0:05:57  time: 1.4910  data_time: 1.2669  memory: 1586  loss: 0.4589  loss_cls: 0.2921  loss_bbox: 0.1667
2023/06/10 14:36:34 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:36:34 - mmengine - INFO - Saving checkpoint at 30 epochs
2023/06/10 14:36:35 - mmengine - INFO - Epoch(val) [30][ 5/56]    eta: 0:00:04  time: 0.0750  data_time: 0.0474  memory: 1584  
2023/06/10 14:36:36 - mmengine - INFO - Epoch(val) [30][10/56]    eta: 0:00:03  time: 0.0742  data_time: 0.0468  memory: 105  
2023/06/10 14:36:36 - mmengine - INFO - Epoch(val) [30][15/56]    eta: 0:00:03  time: 0.0754  data_time: 0.0481  memory: 105  
2023/06/10 14:36:36 - mmengine - INFO - Epoch(val) [30][20/56]    eta: 0:00:02  time: 0.0730  data_time: 0.0457  memory: 105  
2023/06/10 14:36:37 - mmengine - INFO - Epoch(val) [30][25/56]    eta: 0:00:02  time: 0.0723  data_time: 0.0453  memory: 105  
2023/06/10 14:36:37 - mmengine - INFO - Epoch(val) [30][30/56]    eta: 0:00:01  time: 0.0725  data_time: 0.0455  memory: 105  
2023/06/10 14:36:37 - mmengine - INFO - Epoch(val) [30][35/56]    eta: 0:00:01  time: 0.0726  data_time: 0.0456  memory: 105  
2023/06/10 14:36:38 - mmengine - INFO - Epoch(val) [30][40/56]    eta: 0:00:01  time: 0.0717  data_time: 0.0449  memory: 105  
2023/06/10 14:36:38 - mmengine - INFO - Epoch(val) [30][45/56]    eta: 0:00:00  time: 0.0696  data_time: 0.0432  memory: 105  
2023/06/10 14:36:38 - mmengine - INFO - Epoch(val) [30][50/56]    eta: 0:00:00  time: 0.0693  data_time: 0.0430  memory: 105  
2023/06/10 14:36:39 - mmengine - INFO - Epoch(val) [30][55/56]    eta: 0:00:00  time: 0.0660  data_time: 0.0399  memory: 105  
2023/06/10 14:36:39 - mmengine - INFO - Evaluating bbox...
2023/06/10 14:36:39 - mmengine - INFO - bbox_mAP_copypaste: 0.946 0.991 0.991 -1.000 -1.000 0.946
2023/06/10 14:36:40 - mmengine - INFO - Epoch(val) [30][56/56]  coco/bbox_mAP: 0.9460  coco/bbox_mAP_50: 0.9910  coco/bbox_mAP_75: 0.9910  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9460  data_time: 0.0417  time: 0.0677
2023/06/10 14:36:40 - mmengine - INFO - The previous best checkpoint /home/cine/Documents/GitHub/mmdet/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_drinks/best_coco/bbox_mAP_epoch_25.pth is removed
2023/06/10 14:36:41 - mmengine - INFO - The best checkpoint with 0.9460 coco/bbox_mAP at 30 epoch is saved to best_coco/bbox_mAP_epoch_30.pth.
2023/06/10 14:36:51 - mmengine - INFO - Epoch(train) [31][ 5/19]  lr: 9.5493e-05  eta: 0:05:39  time: 1.4819  data_time: 1.2615  memory: 1570  loss: 0.4551  loss_cls: 0.2886  loss_bbox: 0.1665
2023/06/10 14:36:58 - mmengine - INFO - Epoch(train) [31][10/19]  lr: 9.1817e-05  eta: 0:05:29  time: 1.4475  data_time: 1.2282  memory: 1565  loss: 0.4646  loss_cls: 0.2960  loss_bbox: 0.1686
2023/06/10 14:37:03 - mmengine - INFO - Epoch(train) [31][15/19]  lr: 8.8152e-05  eta: 0:05:19  time: 1.4106  data_time: 1.1926  memory: 1560  loss: 0.4681  loss_cls: 0.2992  loss_bbox: 0.1689
2023/06/10 14:37:07 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:37:21 - mmengine - INFO - Epoch(train) [32][ 5/19]  lr: 8.1604e-05  eta: 0:05:03  time: 1.5313  data_time: 1.3169  memory: 1560  loss: 0.4680  loss_cls: 0.2975  loss_bbox: 0.1705
2023/06/10 14:37:27 - mmengine - INFO - Epoch(train) [32][10/19]  lr: 7.8004e-05  eta: 0:04:53  time: 1.5058  data_time: 1.2884  memory: 1561  loss: 0.4679  loss_cls: 0.2966  loss_bbox: 0.1714
2023/06/10 14:37:32 - mmengine - INFO - Epoch(train) [32][15/19]  lr: 7.4440e-05  eta: 0:04:43  time: 1.4782  data_time: 1.2594  memory: 1578  loss: 0.4652  loss_cls: 0.2948  loss_bbox: 0.1704
2023/06/10 14:37:37 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:37:49 - mmengine - INFO - Epoch(train) [33][ 5/19]  lr: 6.8130e-05  eta: 0:04:27  time: 1.5820  data_time: 1.3687  memory: 1586  loss: 0.4634  loss_cls: 0.2946  loss_bbox: 0.1688
2023/06/10 14:37:56 - mmengine - INFO - Epoch(train) [33][10/19]  lr: 6.4695e-05  eta: 0:04:17  time: 1.5071  data_time: 1.2891  memory: 1559  loss: 0.4604  loss_cls: 0.2934  loss_bbox: 0.1670
2023/06/10 14:38:03 - mmengine - INFO - Epoch(train) [33][15/19]  lr: 6.1318e-05  eta: 0:04:07  time: 1.5086  data_time: 1.2914  memory: 1561  loss: 0.4607  loss_cls: 0.2921  loss_bbox: 0.1686
2023/06/10 14:38:06 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:38:20 - mmengine - INFO - Epoch(train) [34][ 5/19]  lr: 5.5402e-05  eta: 0:03:51  time: 1.6396  data_time: 1.4207  memory: 1582  loss: 0.4548  loss_cls: 0.2874  loss_bbox: 0.1674
2023/06/10 14:38:27 - mmengine - INFO - Epoch(train) [34][10/19]  lr: 5.2217e-05  eta: 0:03:42  time: 1.5930  data_time: 1.3709  memory: 1558  loss: 0.4518  loss_cls: 0.2859  loss_bbox: 0.1658
2023/06/10 14:38:31 - mmengine - INFO - Epoch(train) [34][15/19]  lr: 4.9110e-05  eta: 0:03:32  time: 1.5207  data_time: 1.2971  memory: 1568  loss: 0.4495  loss_cls: 0.2842  loss_bbox: 0.1653
2023/06/10 14:38:35 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:38:45 - mmengine - INFO - Epoch(train) [35][ 5/19]  lr: 4.3734e-05  eta: 0:03:15  time: 1.5528  data_time: 1.3340  memory: 1571  loss: 0.4495  loss_cls: 0.2840  loss_bbox: 0.1655
2023/06/10 14:38:52 - mmengine - INFO - Epoch(train) [35][10/19]  lr: 4.0876e-05  eta: 0:03:06  time: 1.5054  data_time: 1.2826  memory: 1581  loss: 0.4513  loss_cls: 0.2849  loss_bbox: 0.1664
2023/06/10 14:38:57 - mmengine - INFO - Epoch(train) [35][15/19]  lr: 3.8117e-05  eta: 0:02:57  time: 1.4710  data_time: 1.2491  memory: 1558  loss: 0.4509  loss_cls: 0.2846  loss_bbox: 0.1663
2023/06/10 14:39:02 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:39:02 - mmengine - INFO - Saving checkpoint at 35 epochs
2023/06/10 14:39:03 - mmengine - INFO - Epoch(val) [35][ 5/56]    eta: 0:00:05  time: 0.0710  data_time: 0.0443  memory: 1581  
2023/06/10 14:39:04 - mmengine - INFO - Epoch(val) [35][10/56]    eta: 0:00:03  time: 0.0712  data_time: 0.0442  memory: 105  
2023/06/10 14:39:04 - mmengine - INFO - Epoch(val) [35][15/56]    eta: 0:00:03  time: 0.0722  data_time: 0.0449  memory: 105  
2023/06/10 14:39:04 - mmengine - INFO - Epoch(val) [35][20/56]    eta: 0:00:02  time: 0.0714  data_time: 0.0440  memory: 105  
2023/06/10 14:39:05 - mmengine - INFO - Epoch(val) [35][25/56]    eta: 0:00:02  time: 0.0722  data_time: 0.0448  memory: 105  
2023/06/10 14:39:05 - mmengine - INFO - Epoch(val) [35][30/56]    eta: 0:00:02  time: 0.0734  data_time: 0.0457  memory: 105  
2023/06/10 14:39:06 - mmengine - INFO - Epoch(val) [35][35/56]    eta: 0:00:01  time: 0.0740  data_time: 0.0460  memory: 105  
2023/06/10 14:39:06 - mmengine - INFO - Epoch(val) [35][40/56]    eta: 0:00:01  time: 0.0739  data_time: 0.0457  memory: 105  
2023/06/10 14:39:06 - mmengine - INFO - Epoch(val) [35][45/56]    eta: 0:00:00  time: 0.0727  data_time: 0.0442  memory: 105  
2023/06/10 14:39:07 - mmengine - INFO - Epoch(val) [35][50/56]    eta: 0:00:00  time: 0.0728  data_time: 0.0441  memory: 105  
2023/06/10 14:39:07 - mmengine - INFO - Epoch(val) [35][55/56]    eta: 0:00:00  time: 0.0689  data_time: 0.0408  memory: 105  
2023/06/10 14:39:07 - mmengine - INFO - Evaluating bbox...
2023/06/10 14:39:08 - mmengine - INFO - bbox_mAP_copypaste: 0.955 0.992 0.992 -1.000 -1.000 0.955
2023/06/10 14:39:08 - mmengine - INFO - Epoch(val) [35][56/56]  coco/bbox_mAP: 0.9550  coco/bbox_mAP_50: 0.9920  coco/bbox_mAP_75: 0.9920  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9550  data_time: 0.0426  time: 0.0707
2023/06/10 14:39:08 - mmengine - INFO - The previous best checkpoint /home/cine/Documents/GitHub/mmdet/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_drinks/best_coco/bbox_mAP_epoch_30.pth is removed
2023/06/10 14:39:09 - mmengine - INFO - The best checkpoint with 0.9550 coco/bbox_mAP at 35 epoch is saved to best_coco/bbox_mAP_epoch_35.pth.
2023/06/10 14:39:09 - mmengine - INFO - Switch pipeline now!
2023/06/10 14:39:13 - mmengine - INFO - Epoch(train) [36][ 5/19]  lr: 3.3413e-05  eta: 0:02:39  time: 1.3935  data_time: 1.1798  memory: 1548  loss: 0.4392  loss_cls: 0.2777  loss_bbox: 0.1615
2023/06/10 14:39:16 - mmengine - INFO - Epoch(train) [36][10/19]  lr: 3.0954e-05  eta: 0:02:30  time: 1.2545  data_time: 1.0415  memory: 1548  loss: 0.4239  loss_cls: 0.2696  loss_bbox: 0.1543
2023/06/10 14:39:18 - mmengine - INFO - Epoch(train) [36][15/19]  lr: 2.8609e-05  eta: 0:02:20  time: 1.1332  data_time: 0.9266  memory: 1548  loss: 0.4012  loss_cls: 0.2556  loss_bbox: 0.1456
2023/06/10 14:39:20 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:39:23 - mmengine - INFO - Epoch(train) [37][ 5/19]  lr: 2.4693e-05  eta: 0:02:03  time: 0.9765  data_time: 0.7793  memory: 1548  loss: 0.3719  loss_cls: 0.2355  loss_bbox: 0.1363
2023/06/10 14:39:25 - mmengine - INFO - Epoch(train) [37][10/19]  lr: 2.2692e-05  eta: 0:01:54  time: 0.8809  data_time: 0.6861  memory: 1548  loss: 0.3522  loss_cls: 0.2224  loss_bbox: 0.1299
2023/06/10 14:39:27 - mmengine - INFO - Epoch(train) [37][15/19]  lr: 2.0821e-05  eta: 0:01:45  time: 0.7803  data_time: 0.5872  memory: 1548  loss: 0.3353  loss_cls: 0.2111  loss_bbox: 0.1242
2023/06/10 14:39:29 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:39:33 - mmengine - INFO - Epoch(train) [38][ 5/19]  lr: 1.7789e-05  eta: 0:01:28  time: 0.6612  data_time: 0.4780  memory: 1548  loss: 0.3059  loss_cls: 0.1911  loss_bbox: 0.1148
2023/06/10 14:39:35 - mmengine - INFO - Epoch(train) [38][10/19]  lr: 1.6296e-05  eta: 0:01:19  time: 0.5335  data_time: 0.3515  memory: 1548  loss: 0.2889  loss_cls: 0.1804  loss_bbox: 0.1085
2023/06/10 14:39:37 - mmengine - INFO - Epoch(train) [38][15/19]  lr: 1.4944e-05  eta: 0:01:11  time: 0.5084  data_time: 0.3272  memory: 1548  loss: 0.2754  loss_cls: 0.1695  loss_bbox: 0.1059
2023/06/10 14:39:39 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:39:43 - mmengine - INFO - Epoch(train) [39][ 5/19]  lr: 1.2870e-05  eta: 0:00:55  time: 0.5366  data_time: 0.3577  memory: 1548  loss: 0.2703  loss_cls: 0.1642  loss_bbox: 0.1061
2023/06/10 14:39:45 - mmengine - INFO - Epoch(train) [39][10/19]  lr: 1.1922e-05  eta: 0:00:46  time: 0.5199  data_time: 0.3401  memory: 1548  loss: 0.2667  loss_cls: 0.1612  loss_bbox: 0.1055
2023/06/10 14:39:47 - mmengine - INFO - Epoch(train) [39][15/19]  lr: 1.1122e-05  eta: 0:00:38  time: 0.4943  data_time: 0.3156  memory: 1548  loss: 0.2638  loss_cls: 0.1589  loss_bbox: 0.1049
2023/06/10 14:39:48 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:39:52 - mmengine - INFO - Epoch(train) [40][ 5/19]  lr: 1.0059e-05  eta: 0:00:23  time: 0.5296  data_time: 0.3523  memory: 1548  loss: 0.2590  loss_cls: 0.1551  loss_bbox: 0.1039
2023/06/10 14:39:54 - mmengine - INFO - Epoch(train) [40][10/19]  lr: 9.6792e-06  eta: 0:00:14  time: 0.5053  data_time: 0.3266  memory: 1548  loss: 0.2568  loss_cls: 0.1533  loss_bbox: 0.1035
2023/06/10 14:39:57 - mmengine - INFO - Epoch(train) [40][15/19]  lr: 9.4511e-06  eta: 0:00:06  time: 0.5049  data_time: 0.3262  memory: 1548  loss: 0.2573  loss_cls: 0.1541  loss_bbox: 0.1032
2023/06/10 14:39:59 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drinks_20230610_141823
2023/06/10 14:39:59 - mmengine - INFO - Saving checkpoint at 40 epochs
2023/06/10 14:40:00 - mmengine - INFO - Epoch(val) [40][ 5/56]    eta: 0:00:05  time: 0.0742  data_time: 0.0458  memory: 1548  
2023/06/10 14:40:01 - mmengine - INFO - Epoch(val) [40][10/56]    eta: 0:00:04  time: 0.0736  data_time: 0.0453  memory: 105  
2023/06/10 14:40:01 - mmengine - INFO - Epoch(val) [40][15/56]    eta: 0:00:03  time: 0.0751  data_time: 0.0467  memory: 105  
2023/06/10 14:40:02 - mmengine - INFO - Epoch(val) [40][20/56]    eta: 0:00:02  time: 0.0729  data_time: 0.0446  memory: 105  
2023/06/10 14:40:02 - mmengine - INFO - Epoch(val) [40][25/56]    eta: 0:00:02  time: 0.0734  data_time: 0.0450  memory: 105  
2023/06/10 14:40:02 - mmengine - INFO - Epoch(val) [40][30/56]    eta: 0:00:02  time: 0.0771  data_time: 0.0487  memory: 105  
2023/06/10 14:40:03 - mmengine - INFO - Epoch(val) [40][35/56]    eta: 0:00:01  time: 0.0785  data_time: 0.0496  memory: 105  
2023/06/10 14:40:03 - mmengine - INFO - Epoch(val) [40][40/56]    eta: 0:00:01  time: 0.0797  data_time: 0.0505  memory: 105  
2023/06/10 14:40:03 - mmengine - INFO - Epoch(val) [40][45/56]    eta: 0:00:00  time: 0.0790  data_time: 0.0498  memory: 105  
2023/06/10 14:40:04 - mmengine - INFO - Epoch(val) [40][50/56]    eta: 0:00:00  time: 0.0789  data_time: 0.0495  memory: 105  
2023/06/10 14:40:04 - mmengine - INFO - Epoch(val) [40][55/56]    eta: 0:00:00  time: 0.0746  data_time: 0.0454  memory: 105  
2023/06/10 14:40:05 - mmengine - INFO - Evaluating bbox...
2023/06/10 14:40:05 - mmengine - INFO - bbox_mAP_copypaste: 0.954 0.992 0.992 -1.000 -1.000 0.954
2023/06/10 14:40:05 - mmengine - INFO - Epoch(val) [40][56/56]  coco/bbox_mAP: 0.9540  coco/bbox_mAP_50: 0.9920  coco/bbox_mAP_75: 0.9920  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9540  data_time: 0.0471  time: 0.0762
